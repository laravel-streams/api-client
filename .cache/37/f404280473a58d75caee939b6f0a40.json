{"id":"Client.ts","dependencies":[{"name":"/home/radic/projects/api-client/tsconfig.json","includedInParent":true,"mtime":1669937883719},{"name":"/home/radic/projects/api-client/package.json","includedInParent":true,"mtime":1669946788356},{"name":"./utils","loc":{"line":24,"column":24,"index":1298},"parent":"/home/radic/projects/api-client/src/Client.ts","resolved":"/home/radic/projects/api-client/src/utils.ts"},{"name":"./Streams","loc":{"line":25,"column":26,"index":1336},"parent":"/home/radic/projects/api-client/src/Client.ts","resolved":"/home/radic/projects/api-client/src/Streams.ts"},{"name":"./fetch/FetchRequest","loc":{"line":26,"column":31,"index":1381},"parent":"/home/radic/projects/api-client/src/Client.ts","resolved":"/home/radic/projects/api-client/src/fetch/FetchRequest.ts"},{"name":"./RequestError","loc":{"line":27,"column":31,"index":1437},"parent":"/home/radic/projects/api-client/src/Client.ts","resolved":"/home/radic/projects/api-client/src/RequestError.ts"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\nvar utils_1 = require(\"./utils\");\nvar Streams_1 = require(\"./Streams\");\nvar FetchRequest_1 = require(\"./fetch/FetchRequest\");\nvar RequestError_1 = require(\"./RequestError\");\nvar Client = /*#__PURE__*/function () {\n  function Client(options) {\n    _classCallCheck(this, Client);\n    this.middlewares = [];\n    options = Object.assign({\n      middlewares: []\n    }, options);\n    this.options = {\n      baseURL: '',\n      request: {\n        mode: 'cors',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      }\n    };\n    var _options = options,\n      middlewares = _options.middlewares,\n      opts = __rest(options, [\"middlewares\"]);\n    this.options = (0, utils_1.mergeObjects)(this.options, opts);\n    this.middlewares = middlewares;\n    this.streams = new Streams_1.Streams(this);\n  }\n  _createClass(Client, [{\n    key: \"use\",\n    value: function use(middleware) {\n      this.middlewares.push(middleware);\n    }\n  }, {\n    key: \"request\",\n    value: function request(method, uri) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this = this;\n        var url, request, _iterator, _step, middleware;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = utils_1.Str.ensureRight(this.options.baseURL, '/') + utils_1.Str.stripLeft(uri, '/');\n                config = Object.assign(Object.assign(Object.assign({}, this.options.request), {\n                  method: method\n                }), config);\n                request = new FetchRequest_1.FetchRequest(url, config);\n                _iterator = _createForOfIteratorHelper(this.middlewares);\n                _context2.prev = 4;\n                _iterator.s();\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 14;\n                  break;\n                }\n                middleware = _step.value;\n                if (!(typeof middleware.request === 'function')) {\n                  _context2.next = 12;\n                  break;\n                }\n                _context2.next = 11;\n                return middleware.request(request, this);\n              case 11:\n                request = _context2.sent;\n              case 12:\n                _context2.next = 6;\n                break;\n              case 14:\n                _context2.next = 19;\n                break;\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](4);\n                _iterator.e(_context2.t0);\n              case 19:\n                _context2.prev = 19;\n                _iterator.f();\n                return _context2.finish(19);\n              case 22:\n                return _context2.abrupt(\"return\", request.fetch().then(function (request) {\n                  return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                    var _iterator2, _step2, middleware;\n                    return _regeneratorRuntime().wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (request.response.ok) {\n                              _context.next = 2;\n                              break;\n                            }\n                            throw new RequestError_1.RequestError(request);\n                          case 2:\n                            _iterator2 = _createForOfIteratorHelper(this.middlewares);\n                            _context.prev = 3;\n                            _iterator2.s();\n                          case 5:\n                            if ((_step2 = _iterator2.n()).done) {\n                              _context.next = 13;\n                              break;\n                            }\n                            middleware = _step2.value;\n                            if (!(typeof middleware.response === 'function')) {\n                              _context.next = 11;\n                              break;\n                            }\n                            _context.next = 10;\n                            return middleware.response(request.response, this);\n                          case 10:\n                            request.response = _context.sent;\n                          case 11:\n                            _context.next = 5;\n                            break;\n                          case 13:\n                            _context.next = 18;\n                            break;\n                          case 15:\n                            _context.prev = 15;\n                            _context.t0 = _context[\"catch\"](3);\n                            _iterator2.e(_context.t0);\n                          case 18:\n                            _context.prev = 18;\n                            _iterator2.f();\n                            return _context.finish(18);\n                          case 21:\n                            return _context.abrupt(\"return\", request.response);\n                          case 22:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this, [[3, 15, 18, 21]]);\n                  }));\n                })\n                // return fetch(request.url, request)\n                // .then<ClientResponse>(async (response: ClientResponse) => {\n                //     request.setResponse(response);\n                //     response.request = request;\n                //     if ( !response.ok ) {\n                //         throw new RequestError(request);\n                //     }\n                //     for ( const middleware of this.middlewares ) {\n                //         if ( typeof middleware.response === 'function' ) {\n                //             response = await middleware.response(response, this);\n                //         }\n                //     }\n                //     return response;\n                // })\n                .catch(function (error) {\n                  var _iterator3 = _createForOfIteratorHelper(_this.middlewares),\n                    _step3;\n                  try {\n                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                      var middleware = _step3.value;\n                      if (typeof middleware.error === 'function') {\n                        middleware.error(error, _this);\n                      }\n                    }\n                  } catch (err) {\n                    _iterator3.e(err);\n                  } finally {\n                    _iterator3.f();\n                  }\n                  return error.response;\n                }));\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 16, 19, 22]]);\n      }));\n    }\n  }, {\n    key: \"requestJSON\",\n    value: function requestJSON(method, uri) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this2.request(method, uri, config).then(function (response) {\n                    return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              _context3.t0 = resolve;\n                              _context3.next = 3;\n                              return response.json();\n                            case 3:\n                              _context3.t1 = _context3.sent;\n                              return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t1));\n                            case 5:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3);\n                    }));\n                  }).catch(function (reason) {\n                    return reject(reason);\n                  });\n                }));\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }]);\n  return Client;\n}();\nexports.Client = Client;"},"sourceMaps":{"js":{"mappings":[{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":0}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":4}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":11}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":14}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":21}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":22}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":31}},{"source":"Client.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":54,"column":32}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":0}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":4}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":13}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":16}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":23}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":24}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":35}},{"source":"Client.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":55,"column":36}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":0}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":4}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":18}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":21}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":28}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":29}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":51}},{"source":"Client.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":56,"column":52}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":0}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":4}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":18}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":21}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":28}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":29}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":45}},{"source":"Client.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":57,"column":46}},{"source":"Client.ts","name":null,"original":{"line":6,"column":46},"generated":{"line":58,"column":0}},{"source":"Client.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":58,"column":4}},{"source":"Client.ts","name":null,"original":{"line":17,"column":19},"generated":{"line":58,"column":10}},{"source":"Client.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":59,"column":2}},{"source":"Client.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":59,"column":18}},{"source":"Client.ts","name":null,"original":{"line":22,"column":49},"generated":{"line":59,"column":25}},{"source":"Client.ts","name":null,"original":{"line":22,"column":49},"generated":{"line":59,"column":27}},{"source":"Client.ts","name":null,"original":{"line":22,"column":49},"generated":{"line":60,"column":4}},{"source":"Client.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":61,"column":4}},{"source":"Client.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":61,"column":8}},{"source":"Client.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":61,"column":9}},{"source":"Client.ts","name":null,"original":{"line":20,"column":31},"generated":{"line":61,"column":20}},{"source":"Client.ts","name":null,"original":{"line":20,"column":48},"generated":{"line":61,"column":23}},{"source":"Client.ts","name":null,"original":{"line":20,"column":50},"generated":{"line":61,"column":25}},{"source":"Client.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":62,"column":4}},{"source":"Client.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":62,"column":11}},{"source":"Client.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":62,"column":14}},{"source":"Client.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":62,"column":20}},{"source":"Client.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":62,"column":21}},{"source":"Client.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":62,"column":27}},{"source":"Client.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":62,"column":28}},{"source":"Client.ts","name":null,"original":{"line":24,"column":12},"generated":{"line":63,"column":6}},{"source":"Client.ts","name":null,"original":{"line":24,"column":23},"generated":{"line":63,"column":17}},{"source":"Client.ts","name":null,"original":{"line":24,"column":25},"generated":{"line":63,"column":19}},{"source":"Client.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":64,"column":4}},{"source":"Client.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":64,"column":5}},{"source":"Client.ts","name":null,"original":{"line":25,"column":15},"generated":{"line":64,"column":7}},{"source":"Client.ts","name":null,"original":{"line":25,"column":22},"generated":{"line":64,"column":14}},{"source":"Client.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":64,"column":15}},{"source":"Client.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":65,"column":4}},{"source":"Client.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":65,"column":8}},{"source":"Client.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":65,"column":9}},{"source":"Client.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":65,"column":16}},{"source":"Client.ts","name":null,"original":{"line":27,"column":41},"generated":{"line":65,"column":19}},{"source":"Client.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":66,"column":6}},{"source":"Client.ts","name":null,"original":{"line":28,"column":19},"generated":{"line":66,"column":13}},{"source":"Client.ts","name":null,"original":{"line":28,"column":21},"generated":{"line":66,"column":15}},{"source":"Client.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":66,"column":17}},{"source":"Client.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":67,"column":6}},{"source":"Client.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":67,"column":13}},{"source":"Client.ts","name":null,"original":{"line":29,"column":21},"generated":{"line":67,"column":15}},{"source":"Client.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":68,"column":8}},{"source":"Client.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":68,"column":12}},{"source":"Client.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":68,"column":14}},{"source":"Client.ts","name":null,"original":{"line":30,"column":31},"generated":{"line":68,"column":20}},{"source":"Client.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":69,"column":8}},{"source":"Client.ts","name":null,"original":{"line":31,"column":23},"generated":{"line":69,"column":15}},{"source":"Client.ts","name":null,"original":{"line":31,"column":25},"generated":{"line":69,"column":17}},{"source":"Client.ts","name":null,"original":{"line":32,"column":20},"generated":{"line":70,"column":10}},{"source":"Client.ts","name":null,"original":{"line":32,"column":38},"generated":{"line":70,"column":28}},{"source":"Client.ts","name":null,"original":{"line":32,"column":40},"generated":{"line":70,"column":30}},{"source":"Client.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":73,"column":5}},{"source":"Client.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":74,"column":4}},{"source":"Client.ts","name":null,"original":{"line":36,"column":41},"generated":{"line":74,"column":19}},{"source":"Client.ts","name":null,"original":{"line":36,"column":48},"generated":{"line":74,"column":26}},{"source":"Client.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":75,"column":6}},{"source":"Client.ts","name":null,"original":{"line":36,"column":27},"generated":{"line":75,"column":17}},{"source":"Client.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":75,"column":29}},{"source":"Client.ts","name":null,"original":{"line":36,"column":27},"generated":{"line":75,"column":40}},{"source":"Client.ts","name":null,"original":{"line":36,"column":32},"generated":{"line":76,"column":6}},{"source":"Client.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":76,"column":10}},{"source":"Client.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":76,"column":13}},{"source":"Client.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":76,"column":19}},{"source":"Client.ts","name":null,"original":{"line":36,"column":41},"generated":{"line":76,"column":20}},{"source":"Client.ts","name":null,"original":{"line":36,"column":48},"generated":{"line":76,"column":27}},{"source":"Client.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":76,"column":29}},{"source":"Client.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":76,"column":30}},{"source":"Client.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":76,"column":43}},{"source":"Client.ts","name":null,"original":{"line":36,"column":38},"generated":{"line":76,"column":44}},{"source":"Client.ts","name":null,"original":{"line":36,"column":48},"generated":{"line":76,"column":45}},{"source":"Client.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":77,"column":4}},{"source":"Client.ts","name":null,"original":{"line":37,"column":12},"generated":{"line":77,"column":8}},{"source":"Client.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":77,"column":9}},{"source":"Client.ts","name":null,"original":{"line":37,"column":20},"generated":{"line":77,"column":16}},{"source":"Client.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":77,"column":19}},{"source":"Client.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":77,"column":20}},{"source":"Client.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":77,"column":21}},{"source":"Client.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":77,"column":23}},{"source":"Client.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":77,"column":30}},{"source":"Client.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":77,"column":31}},{"source":"Client.ts","name":null,"original":{"line":37,"column":53},"generated":{"line":77,"column":43}},{"source":"Client.ts","name":null,"original":{"line":37,"column":54},"generated":{"line":77,"column":45}},{"source":"Client.ts","name":null,"original":{"line":37,"column":58},"generated":{"line":77,"column":49}},{"source":"Client.ts","name":null,"original":{"line":37,"column":59},"generated":{"line":77,"column":50}},{"source":"Client.ts","name":null,"original":{"line":37,"column":66},"generated":{"line":77,"column":57}},{"source":"Client.ts","name":null,"original":{"line":37,"column":68},"generated":{"line":77,"column":59}},{"source":"Client.ts","name":null,"original":{"line":37,"column":72},"generated":{"line":77,"column":63}},{"source":"Client.ts","name":null,"original":{"line":37,"column":73},"generated":{"line":77,"column":64}},{"source":"Client.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":78,"column":4}},{"source":"Client.ts","name":null,"original":{"line":38,"column":12},"generated":{"line":78,"column":8}},{"source":"Client.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":78,"column":9}},{"source":"Client.ts","name":null,"original":{"line":38,"column":24},"generated":{"line":78,"column":20}},{"source":"Client.ts","name":null,"original":{"line":38,"column":41},"generated":{"line":78,"column":23}},{"source":"Client.ts","name":null,"original":{"line":38,"column":52},"generated":{"line":78,"column":34}},{"source":"Client.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":79,"column":4}},{"source":"Client.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":79,"column":8}},{"source":"Client.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":79,"column":9}},{"source":"Client.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":79,"column":16}},{"source":"Client.ts","name":null,"original":{"line":39,"column":41},"generated":{"line":79,"column":19}},{"source":"Client.ts","name":null,"original":{"line":39,"column":45},"generated":{"line":79,"column":23}},{"source":"Client.ts","name":null,"original":{"line":39,"column":45},"generated":{"line":79,"column":32}},{"source":"Client.ts","name":null,"original":{"line":39,"column":45},"generated":{"line":79,"column":33}},{"source":"Client.ts","name":null,"original":{"line":39,"column":52},"generated":{"line":79,"column":40}},{"source":"Client.ts","name":null,"original":{"line":39,"column":53},"generated":{"line":79,"column":41}},{"source":"Client.ts","name":null,"original":{"line":39,"column":57},"generated":{"line":79,"column":45}},{"source":"Client.ts","name":null,"original":{"line":39,"column":58},"generated":{"line":79,"column":46}},{"source":"Client.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":80,"column":2}},{"source":"Client.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":81,"column":2}},{"source":"Client.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":82,"column":4}},{"source":"Client.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":83,"column":4}},{"source":"Client.ts","name":null,"original":{"line":42,"column":11},"generated":{"line":83,"column":11}},{"source":"Client.ts","name":null,"original":{"line":42,"column":15},"generated":{"line":83,"column":24}},{"source":"Client.ts","name":null,"original":{"line":42,"column":37},"generated":{"line":83,"column":34}},{"source":"Client.ts","name":null,"original":{"line":42,"column":37},"generated":{"line":83,"column":36}},{"source":"Client.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":84,"column":6}},{"source":"Client.ts","name":null,"original":{"line":43,"column":12},"generated":{"line":84,"column":10}},{"source":"Client.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":84,"column":11}},{"source":"Client.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":84,"column":22}},{"source":"Client.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":84,"column":23}},{"source":"Client.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":84,"column":27}},{"source":"Client.ts","name":null,"original":{"line":43,"column":30},"generated":{"line":84,"column":28}},{"source":"Client.ts","name":null,"original":{"line":43,"column":40},"generated":{"line":84,"column":38}},{"source":"Client.ts","name":null,"original":{"line":43,"column":41},"generated":{"line":84,"column":39}},{"source":"Client.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":85,"column":4}},{"source":"Client.ts","name":null,"original":{"line":44,"column":5},"generated":{"line":86,"column":2}},{"source":"Client.ts","name":null,"original":{"line":44,"column":5},"generated":{"line":87,"column":4}},{"source":"Client.ts","name":null,"original":{"line":44,"column":5},"generated":{"line":88,"column":4}},{"source":"Client.ts","name":null,"original":{"line":46,"column":17},"generated":{"line":88,"column":11}},{"source":"Client.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":88,"column":28}},{"source":"Client.ts","name":null,"original":{"line":46,"column":39},"generated":{"line":88,"column":34}},{"source":"Client.ts","name":null,"original":{"line":46,"column":41},"generated":{"line":88,"column":36}},{"source":"Client.ts","name":null,"original":{"line":46,"column":52},"generated":{"line":88,"column":39}},{"source":"Client.ts","name":null,"original":{"line":46,"column":80},"generated":{"line":88,"column":41}},{"source":"Client.ts","name":null,"original":{"line":46,"column":80},"generated":{"line":89,"column":6}},{"source":"Client.ts","name":null,"original":{"line":46,"column":54},"generated":{"line":89,"column":10}},{"source":"Client.ts","name":null,"original":{"line":46,"column":54},"generated":{"line":89,"column":16}},{"source":"Client.ts","name":null,"original":{"line":46,"column":78},"generated":{"line":89,"column":87}},{"source":"Client.ts","name":null,"original":{"line":46,"column":78},"generated":{"line":89,"column":88}},{"source":"Client.ts","name":null,"original":{"line":46,"column":80},"generated":{"line":89,"column":89}},{"source":"Client.ts","name":null,"original":{"line":47,"column":12},"generated":{"line":97,"column":16}},{"source":"Client.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":97,"column":19}},{"source":"Client.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":97,"column":22}},{"source":"Client.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":97,"column":29}},{"source":"Client.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":97,"column":30}},{"source":"Client.ts","name":null,"original":{"line":47,"column":25},"generated":{"line":97,"column":33}},{"source":"Client.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":97,"column":34}},{"source":"Client.ts","name":null,"original":{"line":47,"column":37},"generated":{"line":97,"column":45}},{"source":"Client.ts","name":null,"original":{"line":47,"column":38},"generated":{"line":97,"column":46}},{"source":"Client.ts","name":null,"original":{"line":47,"column":42},"generated":{"line":97,"column":50}},{"source":"Client.ts","name":null,"original":{"line":47,"column":43},"generated":{"line":97,"column":51}},{"source":"Client.ts","name":null,"original":{"line":47,"column":50},"generated":{"line":97,"column":58}},{"source":"Client.ts","name":null,"original":{"line":47,"column":51},"generated":{"line":97,"column":59}},{"source":"Client.ts","name":null,"original":{"line":47,"column":58},"generated":{"line":97,"column":66}},{"source":"Client.ts","name":null,"original":{"line":47,"column":60},"generated":{"line":97,"column":68}},{"source":"Client.ts","name":null,"original":{"line":47,"column":63},"generated":{"line":97,"column":71}},{"source":"Client.ts","name":null,"original":{"line":47,"column":64},"generated":{"line":97,"column":72}},{"source":"Client.ts","name":null,"original":{"line":47,"column":67},"generated":{"line":97,"column":75}},{"source":"Client.ts","name":null,"original":{"line":47,"column":67},"generated":{"line":97,"column":82}},{"source":"Client.ts","name":null,"original":{"line":47,"column":67},"generated":{"line":97,"column":83}},{"source":"Client.ts","name":null,"original":{"line":47,"column":70},"generated":{"line":97,"column":86}},{"source":"Client.ts","name":null,"original":{"line":47,"column":71},"generated":{"line":97,"column":87}},{"source":"Client.ts","name":null,"original":{"line":47,"column":80},"generated":{"line":97,"column":96}},{"source":"Client.ts","name":null,"original":{"line":47,"column":81},"generated":{"line":97,"column":97}},{"source":"Client.ts","name":null,"original":{"line":47,"column":84},"generated":{"line":97,"column":100}},{"source":"Client.ts","name":null,"original":{"line":47,"column":86},"generated":{"line":97,"column":102}},{"source":"Client.ts","name":null,"original":{"line":47,"column":89},"generated":{"line":97,"column":105}},{"source":"Client.ts","name":null,"original":{"line":47,"column":90},"generated":{"line":97,"column":106}},{"source":"Client.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":98,"column":16}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":22}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":25}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":31}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":32}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":38}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":39}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":45}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":46}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":52}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":53}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":59}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":60}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":66}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":67}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":68}},{"source":"Client.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":98,"column":69}},{"source":"Client.ts","name":null,"original":{"line":49,"column":15},"generated":{"line":98,"column":71}},{"source":"Client.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":98,"column":75}},{"source":"Client.ts","name":null,"original":{"line":49,"column":20},"generated":{"line":98,"column":76}},{"source":"Client.ts","name":null,"original":{"line":49,"column":27},"generated":{"line":98,"column":83}},{"source":"Client.ts","name":null,"original":{"line":49,"column":28},"generated":{"line":98,"column":84}},{"source":"Client.ts","name":null,"original":{"line":49,"column":35},"generated":{"line":98,"column":91}},{"source":"Client.ts","name":null,"original":{"line":49,"column":35},"generated":{"line":98,"column":92}},{"source":"Client.ts","name":null,"original":{"line":49,"column":35},"generated":{"line":98,"column":94}},{"source":"Client.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":99,"column":18}},{"source":"Client.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":99,"column":24}},{"source":"Client.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":99,"column":26}},{"source":"Client.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":100,"column":16}},{"source":"Client.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":100,"column":17}},{"source":"Client.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":100,"column":18}},{"source":"Client.ts","name":null,"original":{"line":51,"column":15},"generated":{"line":100,"column":20}},{"source":"Client.ts","name":null,"original":{"line":51,"column":21},"generated":{"line":100,"column":26}},{"source":"Client.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":100,"column":27}},{"source":"Client.ts","name":null,"original":{"line":53,"column":12},"generated":{"line":101,"column":16}},{"source":"Client.ts","name":null,"original":{"line":53,"column":19},"generated":{"line":101,"column":23}},{"source":"Client.ts","name":null,"original":{"line":53,"column":22},"generated":{"line":101,"column":26}},{"source":"Client.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":101,"column":30}},{"source":"Client.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":101,"column":44}},{"source":"Client.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":101,"column":45}},{"source":"Client.ts","name":null,"original":{"line":53,"column":38},"generated":{"line":101,"column":57}},{"source":"Client.ts","name":null,"original":{"line":53,"column":39},"generated":{"line":101,"column":58}},{"source":"Client.ts","name":null,"original":{"line":53,"column":42},"generated":{"line":101,"column":61}},{"source":"Client.ts","name":null,"original":{"line":53,"column":44},"generated":{"line":101,"column":63}},{"source":"Client.ts","name":null,"original":{"line":53,"column":50},"generated":{"line":101,"column":69}},{"source":"Client.ts","name":null,"original":{"line":53,"column":51},"generated":{"line":101,"column":70}},{"source":"Client.ts","name":null,"original":{"line":53,"column":51},"generated":{"line":102,"column":16}},{"source":"Client.ts","name":null,"original":{"line":54,"column":34},"generated":{"line":102,"column":55}},{"source":"Client.ts","name":null,"original":{"line":54,"column":38},"generated":{"line":102,"column":59}},{"source":"Client.ts","name":null,"original":{"line":54,"column":39},"generated":{"line":102,"column":60}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":102,"column":71}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":103,"column":16}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":104,"column":16}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":105,"column":14}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":106,"column":16}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":107,"column":18}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":108,"column":18}},{"source":"Client.ts","name":null,"original":{"line":54,"column":50},"generated":{"line":109,"column":16}},{"source":"Client.ts","name":null,"original":{"line":54,"column":20},"generated":{"line":110,"column":16}},{"source":"Client.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":110,"column":26}},{"source":"Client.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":111,"column":16}},{"source":"Client.ts","name":null,"original":{"line":55,"column":17},"generated":{"line":111,"column":22}},{"source":"Client.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":111,"column":29}},{"source":"Client.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":111,"column":39}},{"source":"Client.ts","name":null,"original":{"line":55,"column":35},"generated":{"line":111,"column":40}},{"source":"Client.ts","name":null,"original":{"line":55,"column":42},"generated":{"line":111,"column":47}},{"source":"Client.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":111,"column":52}},{"source":"Client.ts","name":null,"original":{"line":55,"column":57},"generated":{"line":111,"column":62}},{"source":"Client.ts","name":null,"original":{"line":55,"column":57},"generated":{"line":112,"column":18}},{"source":"Client.ts","name":null,"original":{"line":55,"column":57},"generated":{"line":113,"column":18}},{"source":"Client.ts","name":null,"original":{"line":55,"column":57},"generated":{"line":114,"column":16}},{"source":"Client.ts","name":null,"original":{"line":55,"column":57},"generated":{"line":115,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":26},"generated":{"line":116,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":32},"generated":{"line":116,"column":23}},{"source":"Client.ts","name":null,"original":{"line":56,"column":42},"generated":{"line":116,"column":33}},{"source":"Client.ts","name":null,"original":{"line":56,"column":43},"generated":{"line":116,"column":34}},{"source":"Client.ts","name":null,"original":{"line":56,"column":50},"generated":{"line":116,"column":41}},{"source":"Client.ts","name":null,"original":{"line":56,"column":51},"generated":{"line":116,"column":42}},{"source":"Client.ts","name":null,"original":{"line":56,"column":58},"generated":{"line":116,"column":49}},{"source":"Client.ts","name":null,"original":{"line":56,"column":60},"generated":{"line":116,"column":51}},{"source":"Client.ts","name":null,"original":{"line":56,"column":64},"generated":{"line":116,"column":55}},{"source":"Client.ts","name":null,"original":{"line":56,"column":65},"generated":{"line":116,"column":56}},{"source":"Client.ts","name":null,"original":{"line":56,"column":65},"generated":{"line":117,"column":14}},{"source":"Client.ts","name":null,"original":{"line":56,"column":16},"generated":{"line":118,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":118,"column":23}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":119,"column":14}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":120,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":121,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":122,"column":14}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":123,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":124,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":125,"column":14}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":126,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":127,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":128,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":129,"column":14}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":130,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":131,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":132,"column":16}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":133,"column":14}},{"source":"Client.ts","name":null,"original":{"line":56,"column":23},"generated":{"line":134,"column":16}},{"source":"Client.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":134,"column":50}},{"source":"Client.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":134,"column":57}},{"source":"Client.ts","name":null,"original":{"line":59,"column":23},"generated":{"line":134,"column":58}},{"source":"Client.ts","name":null,"original":{"line":59,"column":28},"generated":{"line":134,"column":63}},{"source":"Client.ts","name":null,"original":{"line":59,"column":30},"generated":{"line":134,"column":65}},{"source":"Client.ts","name":null,"original":{"line":59,"column":31},"generated":{"line":134,"column":66}},{"source":"Client.ts","name":null,"original":{"line":59,"column":35},"generated":{"line":134,"column":70}},{"source":"Client.ts","name":null,"original":{"line":59,"column":36},"generated":{"line":134,"column":71}},{"source":"Client.ts","name":null,"original":{"line":59,"column":43},"generated":{"line":134,"column":81}},{"source":"Client.ts","name":null,"original":{"line":59,"column":50},"generated":{"line":134,"column":88}},{"source":"Client.ts","name":null,"original":{"line":59,"column":50},"generated":{"line":135,"column":18}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":25}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":34}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":35}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":40}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":42}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":47}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":48}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":50}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":55}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":56}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":135,"column":98}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":136,"column":20}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":137,"column":20}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":138,"column":22}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":139,"column":24}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":140,"column":26}},{"source":"Client.ts","name":null,"original":{"line":59,"column":54},"generated":{"line":141,"column":28}},{"source":"Client.ts","name":null,"original":{"line":60,"column":18},"generated":{"line":141,"column":32}},{"source":"Client.ts","name":null,"original":{"line":60,"column":25},"generated":{"line":141,"column":39}},{"source":"Client.ts","name":null,"original":{"line":60,"column":26},"generated":{"line":141,"column":40}},{"source":"Client.ts","name":null,"original":{"line":60,"column":34},"generated":{"line":141,"column":48}},{"source":"Client.ts","name":null,"original":{"line":60,"column":35},"generated":{"line":141,"column":49}},{"source":"Client.ts","name":null,"original":{"line":60,"column":37},"generated":{"line":141,"column":51}},{"source":"Client.ts","name":null,"original":{"line":60,"column":37},"generated":{"line":142,"column":30}},{"source":"Client.ts","name":null,"original":{"line":60,"column":37},"generated":{"line":143,"column":30}},{"source":"Client.ts","name":null,"original":{"line":60,"column":37},"generated":{"line":144,"column":28}},{"source":"Client.ts","name":null,"original":{"line":60,"column":37},"generated":{"line":145,"column":28}},{"source":"Client.ts","name":null,"original":{"line":61,"column":22},"generated":{"line":145,"column":34}},{"source":"Client.ts","name":null,"original":{"line":61,"column":26},"generated":{"line":145,"column":38}},{"source":"Client.ts","name":null,"original":{"line":61,"column":26},"generated":{"line":145,"column":52}},{"source":"Client.ts","name":null,"original":{"line":61,"column":26},"generated":{"line":145,"column":53}},{"source":"Client.ts","name":null,"original":{"line":61,"column":38},"generated":{"line":145,"column":65}},{"source":"Client.ts","name":null,"original":{"line":61,"column":39},"generated":{"line":145,"column":66}},{"source":"Client.ts","name":null,"original":{"line":61,"column":46},"generated":{"line":145,"column":73}},{"source":"Client.ts","name":null,"original":{"line":61,"column":47},"generated":{"line":145,"column":74}},{"source":"Client.ts","name":null,"original":{"line":61,"column":47},"generated":{"line":146,"column":26}},{"source":"Client.ts","name":null,"original":{"line":61,"column":47},"generated":{"line":147,"column":28}},{"source":"Client.ts","name":null,"original":{"line":63,"column":38},"generated":{"line":147,"column":68}},{"source":"Client.ts","name":null,"original":{"line":63,"column":42},"generated":{"line":147,"column":72}},{"source":"Client.ts","name":null,"original":{"line":63,"column":43},"generated":{"line":147,"column":73}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":147,"column":84}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":148,"column":28}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":149,"column":28}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":150,"column":26}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":151,"column":28}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":152,"column":30}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":153,"column":30}},{"source":"Client.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":154,"column":28}},{"source":"Client.ts","name":null,"original":{"line":63,"column":24},"generated":{"line":155,"column":28}},{"source":"Client.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":155,"column":38}},{"source":"Client.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":156,"column":28}},{"source":"Client.ts","name":null,"original":{"line":64,"column":21},"generated":{"line":156,"column":34}},{"source":"Client.ts","name":null,"original":{"line":64,"column":28},"generated":{"line":156,"column":41}},{"source":"Client.ts","name":null,"original":{"line":64,"column":38},"generated":{"line":156,"column":51}},{"source":"Client.ts","name":null,"original":{"line":64,"column":39},"generated":{"line":156,"column":52}},{"source":"Client.ts","name":null,"original":{"line":64,"column":47},"generated":{"line":156,"column":60}},{"source":"Client.ts","name":null,"original":{"line":64,"column":52},"generated":{"line":156,"column":65}},{"source":"Client.ts","name":null,"original":{"line":64,"column":62},"generated":{"line":156,"column":75}},{"source":"Client.ts","name":null,"original":{"line":64,"column":62},"generated":{"line":157,"column":30}},{"source":"Client.ts","name":null,"original":{"line":64,"column":62},"generated":{"line":158,"column":30}},{"source":"Client.ts","name":null,"original":{"line":64,"column":62},"generated":{"line":159,"column":28}},{"source":"Client.ts","name":null,"original":{"line":64,"column":62},"generated":{"line":160,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":39},"generated":{"line":161,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":45},"generated":{"line":161,"column":35}},{"source":"Client.ts","name":null,"original":{"line":65,"column":55},"generated":{"line":161,"column":45}},{"source":"Client.ts","name":null,"original":{"line":65,"column":56},"generated":{"line":161,"column":46}},{"source":"Client.ts","name":null,"original":{"line":65,"column":64},"generated":{"line":161,"column":54}},{"source":"Client.ts","name":null,"original":{"line":65,"column":65},"generated":{"line":161,"column":55}},{"source":"Client.ts","name":null,"original":{"line":65,"column":72},"generated":{"line":161,"column":62}},{"source":"Client.ts","name":null,"original":{"line":65,"column":73},"generated":{"line":161,"column":63}},{"source":"Client.ts","name":null,"original":{"line":65,"column":81},"generated":{"line":161,"column":71}},{"source":"Client.ts","name":null,"original":{"line":65,"column":83},"generated":{"line":161,"column":73}},{"source":"Client.ts","name":null,"original":{"line":65,"column":87},"generated":{"line":161,"column":77}},{"source":"Client.ts","name":null,"original":{"line":65,"column":88},"generated":{"line":161,"column":78}},{"source":"Client.ts","name":null,"original":{"line":65,"column":88},"generated":{"line":162,"column":26}},{"source":"Client.ts","name":null,"original":{"line":65,"column":20},"generated":{"line":163,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":163,"column":35}},{"source":"Client.ts","name":null,"original":{"line":65,"column":28},"generated":{"line":163,"column":36}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":163,"column":44}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":164,"column":26}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":165,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":166,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":167,"column":26}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":168,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":169,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":170,"column":26}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":171,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":172,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":173,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":174,"column":26}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":175,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":176,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":177,"column":28}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":178,"column":26}},{"source":"Client.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":179,"column":28}},{"source":"Client.ts","name":null,"original":{"line":68,"column":19},"generated":{"line":179,"column":61}},{"source":"Client.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":179,"column":68}},{"source":"Client.ts","name":null,"original":{"line":68,"column":27},"generated":{"line":179,"column":69}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":179,"column":77}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":180,"column":26}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":181,"column":26}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":182,"column":28}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":183,"column":24}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":184,"column":22}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":185,"column":20}},{"source":"Client.ts","name":null,"original":{"line":68,"column":35},"generated":{"line":186,"column":18}},{"source":"Client.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":186,"column":19}},{"source":"Client.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":186,"column":21}},{"source":"Client.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":187,"column":16}},{"source":"Client.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":188,"column":16}},{"source":"Client.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":189,"column":16}},{"source":"Client.ts","name":null,"original":{"line":72,"column":8},"generated":{"line":190,"column":16}},{"source":"Client.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":191,"column":16}},{"source":"Client.ts","name":null,"original":{"line":74,"column":8},"generated":{"line":192,"column":16}},{"source":"Client.ts","name":null,"original":{"line":75,"column":8},"generated":{"line":193,"column":16}},{"source":"Client.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":194,"column":16}},{"source":"Client.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":195,"column":16}},{"source":"Client.ts","name":null,"original":{"line":78,"column":8},"generated":{"line":196,"column":16}},{"source":"Client.ts","name":null,"original":{"line":79,"column":8},"generated":{"line":197,"column":16}},{"source":"Client.ts","name":null,"original":{"line":80,"column":8},"generated":{"line":198,"column":16}},{"source":"Client.ts","name":null,"original":{"line":81,"column":8},"generated":{"line":199,"column":16}},{"source":"Client.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":200,"column":16}},{"source":"Client.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":201,"column":16}},{"source":"Client.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":202,"column":16}},{"source":"Client.ts","name":null,"original":{"line":84,"column":23},"generated":{"line":202,"column":17}},{"source":"Client.ts","name":null,"original":{"line":84,"column":28},"generated":{"line":202,"column":22}},{"source":"Client.ts","name":null,"original":{"line":84,"column":29},"generated":{"line":202,"column":23}},{"source":"Client.ts","name":null,"original":{"line":84,"column":29},"generated":{"line":202,"column":33}},{"source":"Client.ts","name":null,"original":{"line":84,"column":34},"generated":{"line":202,"column":38}},{"source":"Client.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":202,"column":40}},{"source":"Client.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":203,"column":18}},{"source":"Client.ts","name":null,"original":{"line":85,"column":52},"generated":{"line":203,"column":62}},{"source":"Client.ts","name":null,"original":{"line":85,"column":56},"generated":{"line":203,"column":67}},{"source":"Client.ts","name":null,"original":{"line":85,"column":57},"generated":{"line":203,"column":68}},{"source":"Client.ts","name":null,"original":{"line":85,"column":68},"generated":{"line":203,"column":79}},{"source":"Client.ts","name":null,"original":{"line":85,"column":68},"generated":{"line":204,"column":20}},{"source":"Client.ts","name":null,"original":{"line":85,"column":68},"generated":{"line":205,"column":18}},{"source":"Client.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":206,"column":20}},{"source":"Client.ts","name":null,"original":{"line":85,"column":71},"generated":{"line":206,"column":75}},{"source":"Client.ts","name":null,"original":{"line":85,"column":71},"generated":{"line":207,"column":22}},{"source":"Client.ts","name":null,"original":{"line":85,"column":38},"generated":{"line":207,"column":26}},{"source":"Client.ts","name":null,"original":{"line":85,"column":48},"generated":{"line":207,"column":36}},{"source":"Client.ts","name":null,"original":{"line":86,"column":30},"generated":{"line":208,"column":22}},{"source":"Client.ts","name":null,"original":{"line":86,"column":35},"generated":{"line":208,"column":26}},{"source":"Client.ts","name":null,"original":{"line":86,"column":42},"generated":{"line":208,"column":33}},{"source":"Client.ts","name":null,"original":{"line":86,"column":52},"generated":{"line":208,"column":43}},{"source":"Client.ts","name":null,"original":{"line":86,"column":53},"generated":{"line":208,"column":44}},{"source":"Client.ts","name":null,"original":{"line":86,"column":58},"generated":{"line":208,"column":49}},{"source":"Client.ts","name":null,"original":{"line":86,"column":63},"generated":{"line":208,"column":54}},{"source":"Client.ts","name":null,"original":{"line":86,"column":73},"generated":{"line":208,"column":64}},{"source":"Client.ts","name":null,"original":{"line":86,"column":76},"generated":{"line":208,"column":66}},{"source":"Client.ts","name":null,"original":{"line":87,"column":34},"generated":{"line":209,"column":24}},{"source":"Client.ts","name":null,"original":{"line":87,"column":44},"generated":{"line":209,"column":34}},{"source":"Client.ts","name":null,"original":{"line":87,"column":45},"generated":{"line":209,"column":35}},{"source":"Client.ts","name":null,"original":{"line":87,"column":50},"generated":{"line":209,"column":40}},{"source":"Client.ts","name":null,"original":{"line":87,"column":51},"generated":{"line":209,"column":41}},{"source":"Client.ts","name":null,"original":{"line":87,"column":56},"generated":{"line":209,"column":46}},{"source":"Client.ts","name":null,"original":{"line":87,"column":58},"generated":{"line":209,"column":48}},{"source":"Client.ts","name":null,"original":{"line":87,"column":62},"generated":{"line":209,"column":53}},{"source":"Client.ts","name":null,"original":{"line":87,"column":63},"generated":{"line":209,"column":54}},{"source":"Client.ts","name":null,"original":{"line":89,"column":27},"generated":{"line":212,"column":18}},{"source":"Client.ts","name":null,"original":{"line":89,"column":27},"generated":{"line":213,"column":20}},{"source":"Client.ts","name":null,"original":{"line":89,"column":27},"generated":{"line":214,"column":18}},{"source":"Client.ts","name":null,"original":{"line":89,"column":27},"generated":{"line":215,"column":20}},{"source":"Client.ts","name":null,"original":{"line":89,"column":27},"generated":{"line":216,"column":18}},{"source":"Client.ts","name":null,"original":{"line":90,"column":26},"generated":{"line":217,"column":18}},{"source":"Client.ts","name":null,"original":{"line":90,"column":33},"generated":{"line":217,"column":25}},{"source":"Client.ts","name":null,"original":{"line":90,"column":38},"generated":{"line":217,"column":30}},{"source":"Client.ts","name":null,"original":{"line":90,"column":39},"generated":{"line":217,"column":31}},{"source":"Client.ts","name":null,"original":{"line":90,"column":47},"generated":{"line":217,"column":39}},{"source":"Client.ts","name":null,"original":{"line":91,"column":22},"generated":{"line":218,"column":16}},{"source":"Client.ts","name":null,"original":{"line":91,"column":23},"generated":{"line":218,"column":17}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":218,"column":18}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":219,"column":14}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":220,"column":14}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":221,"column":16}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":222,"column":12}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":223,"column":10}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":224,"column":8}},{"source":"Client.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":225,"column":6}},{"source":"Client.ts","name":null,"original":{"line":92,"column":5},"generated":{"line":225,"column":7}},{"source":"Client.ts","name":null,"original":{"line":92,"column":5},"generated":{"line":225,"column":9}},{"source":"Client.ts","name":null,"original":{"line":92,"column":5},"generated":{"line":227,"column":2}},{"source":"Client.ts","name":null,"original":{"line":92,"column":5},"generated":{"line":228,"column":4}},{"source":"Client.ts","name":null,"original":{"line":92,"column":5},"generated":{"line":229,"column":4}},{"source":"Client.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":229,"column":11}},{"source":"Client.ts","name":null,"original":{"line":94,"column":38},"generated":{"line":229,"column":32}},{"source":"Client.ts","name":null,"original":{"line":94,"column":52},"generated":{"line":229,"column":38}},{"source":"Client.ts","name":null,"original":{"line":94,"column":54},"generated":{"line":229,"column":40}},{"source":"Client.ts","name":null,"original":{"line":94,"column":65},"generated":{"line":229,"column":43}},{"source":"Client.ts","name":null,"original":{"line":94,"column":93},"generated":{"line":229,"column":45}},{"source":"Client.ts","name":null,"original":{"line":94,"column":93},"generated":{"line":230,"column":6}},{"source":"Client.ts","name":null,"original":{"line":94,"column":67},"generated":{"line":230,"column":10}},{"source":"Client.ts","name":null,"original":{"line":94,"column":67},"generated":{"line":230,"column":16}},{"source":"Client.ts","name":null,"original":{"line":94,"column":91},"generated":{"line":230,"column":87}},{"source":"Client.ts","name":null,"original":{"line":94,"column":91},"generated":{"line":230,"column":88}},{"source":"Client.ts","name":null,"original":{"line":94,"column":93},"generated":{"line":230,"column":89}},{"source":"Client.ts","name":null,"original":{"line":95,"column":15},"generated":{"line":237,"column":50}},{"source":"Client.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":237,"column":54}},{"source":"Client.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":237,"column":61}},{"source":"Client.ts","name":null,"original":{"line":95,"column":27},"generated":{"line":237,"column":62}},{"source":"Client.ts","name":null,"original":{"line":95,"column":28},"generated":{"line":237,"column":72}},{"source":"Client.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":237,"column":79}},{"source":"Client.ts","name":null,"original":{"line":95,"column":37},"generated":{"line":237,"column":81}},{"source":"Client.ts","name":null,"original":{"line":95,"column":43},"generated":{"line":237,"column":87}},{"source":"Client.ts","name":null,"original":{"line":95,"column":47},"generated":{"line":237,"column":89}},{"source":"Client.ts","name":null,"original":{"line":96,"column":12},"generated":{"line":238,"column":18}},{"source":"Client.ts","name":null,"original":{"line":96,"column":16},"generated":{"line":238,"column":24}},{"source":"Client.ts","name":null,"original":{"line":96,"column":17},"generated":{"line":238,"column":25}},{"source":"Client.ts","name":null,"original":{"line":96,"column":24},"generated":{"line":238,"column":32}},{"source":"Client.ts","name":null,"original":{"line":96,"column":25},"generated":{"line":238,"column":33}},{"source":"Client.ts","name":null,"original":{"line":96,"column":31},"generated":{"line":238,"column":39}},{"source":"Client.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":238,"column":41}},{"source":"Client.ts","name":null,"original":{"line":96,"column":36},"generated":{"line":238,"column":44}},{"source":"Client.ts","name":null,"original":{"line":96,"column":38},"generated":{"line":238,"column":46}},{"source":"Client.ts","name":null,"original":{"line":96,"column":44},"generated":{"line":238,"column":52}},{"source":"Client.ts","name":null,"original":{"line":96,"column":45},"generated":{"line":238,"column":53}},{"source":"Client.ts","name":null,"original":{"line":97,"column":17},"generated":{"line":238,"column":54}},{"source":"Client.ts","name":null,"original":{"line":97,"column":21},"generated":{"line":238,"column":58}},{"source":"Client.ts","name":null,"original":{"line":97,"column":22},"generated":{"line":238,"column":59}},{"source":"Client.ts","name":null,"original":{"line":97,"column":29},"generated":{"line":238,"column":69}},{"source":"Client.ts","name":null,"original":{"line":97,"column":37},"generated":{"line":238,"column":77}},{"source":"Client.ts","name":null,"original":{"line":97,"column":37},"generated":{"line":239,"column":20}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":27}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":36}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":37}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":43}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":45}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":50}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":51}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":53}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":58}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":59}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":239,"column":101}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":240,"column":22}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":241,"column":24}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":242,"column":26}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":243,"column":28}},{"source":"Client.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":244,"column":30}},{"source":"Client.ts","name":null,"original":{"line":97,"column":42},"generated":{"line":244,"column":45}},{"source":"Client.ts","name":null,"original":{"line":97,"column":49},"generated":{"line":244,"column":52}},{"source":"Client.ts","name":null,"original":{"line":97,"column":49},"generated":{"line":245,"column":30}},{"source":"Client.ts","name":null,"original":{"line":97,"column":50},"generated":{"line":246,"column":30}},{"source":"Client.ts","name":null,"original":{"line":97,"column":56},"generated":{"line":246,"column":37}},{"source":"Client.ts","name":null,"original":{"line":97,"column":64},"generated":{"line":246,"column":45}},{"source":"Client.ts","name":null,"original":{"line":97,"column":65},"generated":{"line":246,"column":46}},{"source":"Client.ts","name":null,"original":{"line":97,"column":69},"generated":{"line":246,"column":50}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":246,"column":52}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":247,"column":28}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":248,"column":30}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":249,"column":30}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":250,"column":28}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":251,"column":28}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":252,"column":30}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":253,"column":26}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":254,"column":24}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":255,"column":22}},{"source":"Client.ts","name":null,"original":{"line":97,"column":71},"generated":{"line":256,"column":20}},{"source":"Client.ts","name":null,"original":{"line":97,"column":72},"generated":{"line":256,"column":21}},{"source":"Client.ts","name":null,"original":{"line":97,"column":72},"generated":{"line":256,"column":23}},{"source":"Client.ts","name":null,"original":{"line":97,"column":72},"generated":{"line":257,"column":18}},{"source":"Client.ts","name":null,"original":{"line":97,"column":73},"generated":{"line":257,"column":20}},{"source":"Client.ts","name":null,"original":{"line":98,"column":17},"generated":{"line":257,"column":21}},{"source":"Client.ts","name":null,"original":{"line":98,"column":22},"generated":{"line":257,"column":26}},{"source":"Client.ts","name":null,"original":{"line":98,"column":23},"generated":{"line":257,"column":27}},{"source":"Client.ts","name":null,"original":{"line":98,"column":23},"generated":{"line":257,"column":37}},{"source":"Client.ts","name":null,"original":{"line":98,"column":29},"generated":{"line":257,"column":43}},{"source":"Client.ts","name":null,"original":{"line":98,"column":29},"generated":{"line":258,"column":20}},{"source":"Client.ts","name":null,"original":{"line":98,"column":33},"generated":{"line":258,"column":27}},{"source":"Client.ts","name":null,"original":{"line":98,"column":39},"generated":{"line":258,"column":33}},{"source":"Client.ts","name":null,"original":{"line":98,"column":40},"generated":{"line":258,"column":34}},{"source":"Client.ts","name":null,"original":{"line":98,"column":46},"generated":{"line":258,"column":40}},{"source":"Client.ts","name":null,"original":{"line":98,"column":47},"generated":{"line":258,"column":41}},{"source":"Client.ts","name":null,"original":{"line":98,"column":47},"generated":{"line":259,"column":18}},{"source":"Client.ts","name":null,"original":{"line":98,"column":48},"generated":{"line":259,"column":20}},{"source":"Client.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":260,"column":16}},{"source":"Client.ts","name":null,"original":{"line":99,"column":9},"generated":{"line":260,"column":17}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":260,"column":18}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":261,"column":14}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":262,"column":14}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":263,"column":16}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":264,"column":12}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":265,"column":10}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":266,"column":8}},{"source":"Client.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":267,"column":6}},{"source":"Client.ts","name":null,"original":{"line":100,"column":5},"generated":{"line":267,"column":7}},{"source":"Client.ts","name":null,"original":{"line":100,"column":5},"generated":{"line":267,"column":9}},{"source":"Client.ts","name":null,"original":{"line":100,"column":5},"generated":{"line":269,"column":2}},{"source":"Client.ts","name":null,"original":{"line":100,"column":5},"generated":{"line":270,"column":2}},{"source":"Client.ts","name":null,"original":{"line":100,"column":5},"generated":{"line":271,"column":0}},{"source":"Client.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":272,"column":0}},{"source":"Client.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":272,"column":7}},{"source":"Client.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":272,"column":8}},{"source":"Client.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":272,"column":14}},{"source":"Client.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":272,"column":17}},{"source":"Client.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":272,"column":23}}],"sources":{"Client.ts":"import { mergeObjects, Str } from './utils';\nimport { Streams } from './Streams';\nimport { FetchRequest } from './fetch/FetchRequest';\nimport { ClientResponse, RequestConfig } from './types';\nimport { Middleware } from './middleware/Middleware';\nimport { RequestError } from './RequestError';\n\nexport interface ClientOptions {\n    baseURL: string,\n    request?: RequestInit;\n}\n\nexport interface ClientConstructorOptions extends ClientOptions {\n    middlewares?: Middleware[];\n}\n\nexport class Client {\n    public options: ClientOptions;\n    public readonly streams: Streams;\n    public readonly middlewares: Middleware[] = [];\n\n    constructor(options: ClientConstructorOptions) {\n        options                        = {\n            middlewares: [],\n            ...options,\n        };\n        this.options                   = {\n            baseURL: '',\n            request: {\n                mode   : 'cors',\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                },\n            },\n        };\n        const { middlewares, ...opts } = options;\n        this.options                   = mergeObjects(this.options, opts);\n        this.middlewares               = middlewares;\n        this.streams                   = new Streams(this);\n    }\n\n    public use(middleware: Middleware) {\n        this.middlewares.push(middleware);\n    }\n\n    public async request(method: string, uri: string, config: RequestConfig = {}): Promise<ClientResponse> {\n        let url     = Str.ensureRight(this.options.baseURL, '/') + Str.stripLeft(uri, '/');\n        config      = {\n            ...this.options.request,\n            method,\n            ...config,\n        };\n        let request = new FetchRequest(url, config);\n        for ( const middleware of this.middlewares ) {\n            if ( typeof middleware.request === 'function' ) {\n                request = await middleware.request(request, this);\n            }\n        }\n        return request.fetch().then(async (request) => {\n            if ( !request.response.ok ) {\n                throw new RequestError(request);\n            }\n            for ( const middleware of this.middlewares ) {\n                if ( typeof middleware.response === 'function' ) {\n                    request.response = await middleware.response(request.response, this);\n                }\n            }\n            return request.response;\n        })\n        // return fetch(request.url, request)\n        // .then<ClientResponse>(async (response: ClientResponse) => {\n        //     request.setResponse(response);\n        //     response.request = request;\n        //     if ( !response.ok ) {\n        //         throw new RequestError(request);\n        //     }\n        //     for ( const middleware of this.middlewares ) {\n        //         if ( typeof middleware.response === 'function' ) {\n        //             response = await middleware.response(response, this);\n        //         }\n        //     }\n        //     return response;\n        // })\n                      .catch(error => {\n                          for ( const middleware of this.middlewares ) {\n                              if ( typeof middleware.error === 'function' ) {\n                                  middleware.error(error, this);\n                              }\n                          }\n                          return error.response;\n                      });\n    }\n\n    public async requestJSON<T = any>(method: string, uri: string, config: RequestConfig = {}): Promise<T> {\n        return new Promise((resolve, reject) => {\n            this.request(method, uri, config)\n                .then(async (response) => resolve(await response.json()))\n                .catch(reason => reject(reason));\n        });\n    }\n}"},"lineCount":null}},"error":null,"hash":"bdd38379295e7710aca3d05afa8a16f7","cacheData":{"env":{}}}