{"id":"Streams.ts","dependencies":[{"name":"/home/radic/projects/api-client/tsconfig.json","includedInParent":true,"mtime":1669937883719},{"name":"/home/radic/projects/api-client/package.json","includedInParent":true,"mtime":1669946788356},{"name":"./Resource","loc":{"line":13,"column":27,"index":811},"parent":"/home/radic/projects/api-client/src/Streams.ts","resolved":"/home/radic/projects/api-client/src/Resource.ts"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Streams = void 0;\nvar Resource_1 = require(\"./Resource\");\nvar Streams = /*#__PURE__*/function (_Resource_1$Resource) {\n  _inherits(Streams, _Resource_1$Resource);\n  var _super = _createSuper(Streams);\n  function Streams() {\n    _classCallCheck(this, Streams);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Streams, [{\n    key: \"get\",\n    value: function get() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.client.request('get', '/streams', config));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"find\",\n    value: function find(stream) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.client.request('get', \"/streams/\".concat(stream), config));\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(data) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.client.request('post', '/streams', config));\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"patch\",\n    value: function patch() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.client.request('patch', '/streams', config));\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"put\",\n    value: function put() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.client.request('put', '/streams', config));\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(stream) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.client.request('delete', \"/streams/\".concat(stream), config));\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }]);\n  return Streams;\n}(Resource_1.Resource);\nexports.Streams = Streams;"},"sourceMaps":{"js":{"mappings":[{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":0}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":17}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":24}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":25}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":37}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":48,"column":38}},{"source":"Streams.ts","name":null,"original":{"line":1,"column":38},"generated":{"line":49,"column":0}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":49,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":49,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":50,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":51,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":52,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":53,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":54,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":55,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":56,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":57,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":58,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":58,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":43},"generated":{"line":58,"column":26}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":43},"generated":{"line":59,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":17},"generated":{"line":59,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":17},"generated":{"line":59,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":59,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":59,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":6,"column":43},"generated":{"line":59,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":15},"generated":{"line":65,"column":49}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":19},"generated":{"line":65,"column":53}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":65,"column":54}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":65,"column":60}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":65,"column":61}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":34},"generated":{"line":65,"column":68}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":65,"column":69}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":40},"generated":{"line":65,"column":74}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":42},"generated":{"line":65,"column":76}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":65,"column":86}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":54},"generated":{"line":65,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":60},"generated":{"line":65,"column":94}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":65,"column":95}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":66,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":67,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":68,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":69,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":70,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":71,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":72,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":72,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":72,"column":9}},{"source":"Streams.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":74,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":75,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":76,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":76,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":76,"column":25}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":41},"generated":{"line":76,"column":31}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":69},"generated":{"line":76,"column":33}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":69},"generated":{"line":77,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":43},"generated":{"line":77,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":43},"generated":{"line":77,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":67},"generated":{"line":77,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":67},"generated":{"line":77,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":10,"column":69},"generated":{"line":77,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":83,"column":50}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":83,"column":54}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":20},"generated":{"line":83,"column":55}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":83,"column":61}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":27},"generated":{"line":83,"column":62}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":34},"generated":{"line":83,"column":69}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":35},"generated":{"line":83,"column":70}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":83,"column":75}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":83,"column":96}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":83,"column":102}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":64},"generated":{"line":83,"column":105}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":70},"generated":{"line":83,"column":111}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":83,"column":112}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":84,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":85,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":86,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":87,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":88,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":89,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":90,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":90,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":90,"column":9}},{"source":"Streams.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":92,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":93,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":94,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":10},"generated":{"line":94,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":94,"column":25}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":94,"column":29}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":55},"generated":{"line":94,"column":31}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":55},"generated":{"line":95,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":95,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":95,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":53},"generated":{"line":95,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":53},"generated":{"line":95,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":14,"column":55},"generated":{"line":95,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":101,"column":50}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":19},"generated":{"line":101,"column":54}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":20},"generated":{"line":101,"column":55}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":26},"generated":{"line":101,"column":61}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":27},"generated":{"line":101,"column":62}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":34},"generated":{"line":101,"column":69}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":35},"generated":{"line":101,"column":70}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":41},"generated":{"line":101,"column":76}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":43},"generated":{"line":101,"column":78}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":53},"generated":{"line":101,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":55},"generated":{"line":101,"column":90}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":61},"generated":{"line":101,"column":96}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":101,"column":97}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":102,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":103,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":104,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":105,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":106,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":107,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":16,"column":62},"generated":{"line":108,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":108,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":108,"column":9}},{"source":"Streams.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":110,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":111,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":112,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":10},"generated":{"line":112,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":45},"generated":{"line":112,"column":28}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":45},"generated":{"line":113,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":113,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":113,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":43},"generated":{"line":113,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":43},"generated":{"line":113,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":19,"column":45},"generated":{"line":113,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":119,"column":50}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":119,"column":54}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":119,"column":55}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":119,"column":61}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":119,"column":62}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":34},"generated":{"line":119,"column":69}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":35},"generated":{"line":119,"column":70}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":42},"generated":{"line":119,"column":77}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":44},"generated":{"line":119,"column":79}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":54},"generated":{"line":119,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":56},"generated":{"line":119,"column":91}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":62},"generated":{"line":119,"column":97}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":119,"column":98}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":120,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":121,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":122,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":123,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":124,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":125,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":20,"column":63},"generated":{"line":126,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":21,"column":5},"generated":{"line":126,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":21,"column":5},"generated":{"line":126,"column":9}},{"source":"Streams.ts","name":null,"original":{"line":21,"column":5},"generated":{"line":128,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":21,"column":5},"generated":{"line":129,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":21,"column":5},"generated":{"line":130,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":10},"generated":{"line":130,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":43},"generated":{"line":130,"column":26}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":43},"generated":{"line":131,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":17},"generated":{"line":131,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":17},"generated":{"line":131,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":41},"generated":{"line":131,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":41},"generated":{"line":131,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":23,"column":43},"generated":{"line":131,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":15},"generated":{"line":137,"column":50}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":137,"column":54}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":137,"column":55}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":26},"generated":{"line":137,"column":61}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":137,"column":62}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":34},"generated":{"line":137,"column":69}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":35},"generated":{"line":137,"column":70}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":40},"generated":{"line":137,"column":75}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":42},"generated":{"line":137,"column":77}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":52},"generated":{"line":137,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":54},"generated":{"line":137,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":60},"generated":{"line":137,"column":95}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":137,"column":96}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":138,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":139,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":140,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":141,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":142,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":143,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":24,"column":61},"generated":{"line":144,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":144,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":144,"column":9}},{"source":"Streams.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":146,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":147,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":148,"column":4}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":148,"column":11}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":148,"column":28}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":43},"generated":{"line":148,"column":34}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":71},"generated":{"line":148,"column":36}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":71},"generated":{"line":149,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":45},"generated":{"line":149,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":45},"generated":{"line":149,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":69},"generated":{"line":149,"column":87}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":69},"generated":{"line":149,"column":88}},{"source":"Streams.ts","name":null,"original":{"line":27,"column":71},"generated":{"line":149,"column":89}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":15},"generated":{"line":155,"column":50}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":19},"generated":{"line":155,"column":54}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":20},"generated":{"line":155,"column":55}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":26},"generated":{"line":155,"column":61}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":27},"generated":{"line":155,"column":62}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":34},"generated":{"line":155,"column":69}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":35},"generated":{"line":155,"column":70}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":43},"generated":{"line":155,"column":78}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":57},"generated":{"line":155,"column":99}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":63},"generated":{"line":155,"column":105}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":67},"generated":{"line":155,"column":108}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":73},"generated":{"line":155,"column":114}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":155,"column":115}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":156,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":157,"column":14}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":158,"column":16}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":159,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":160,"column":10}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":161,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":28,"column":74},"generated":{"line":162,"column":6}},{"source":"Streams.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":162,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":162,"column":9}},{"source":"Streams.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":164,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":165,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":166,"column":0}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":166,"column":2}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":166,"column":12}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":166,"column":13}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":37},"generated":{"line":166,"column":21}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":167,"column":0}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":167,"column":7}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":167,"column":8}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":167,"column":15}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":167,"column":18}},{"source":"Streams.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":167,"column":25}}],"sources":{"Streams.ts":"import { Resource } from './Resource';\nimport { ClientResponse, RequestConfig } from './types';\n\n\nexport class Streams extends Resource {\n    async get<T>(config: RequestConfig = {}): Promise<ClientResponse<T[]>> {\n        return this.client.request('get', '/streams', config);\n    }\n\n    async find<T>(stream: string | number, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('get', `/streams/${stream}`, config);\n    }\n\n    async post<T>(data: any, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n\n        return this.client.request('post', '/streams', config);\n    }\n\n    async patch<T>(config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('patch', '/streams', config);\n    }\n\n    async put<T>(config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('put', '/streams', config);\n    }\n\n    async delete<T>(stream: string | number, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('delete', `/streams/${stream}`, config);\n    }\n}"},"lineCount":null}},"error":null,"hash":"1211452e07fb0e8b2e67baffd761d21a","cacheData":{"env":{}}}