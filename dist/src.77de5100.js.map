{"version":3,"sources":["utils.ts","Resource.ts","Streams.ts","fetch/FetchHeaders.ts","fetch/FetchRequest.ts","RequestError.ts","Client.ts","middleware/Middleware.ts","middleware/AuthorizationMiddleware.ts","Transformer.ts","middleware/ETagMiddleware.ts","middleware/ResultDataMiddleware.ts","middleware/index.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["\nexport class Str {\n    public static random(length = 15) {\n        let text       = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for ( let i = 0; i < length; i ++ ) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n\n    public static ensureLeft(str: string, left: string): string {\n        if ( false === str.startsWith(left) ) {\n            return left + str;\n        }\n        return str;\n    }\n\n    public static ensureRight(str: string, right: string): string {\n        if ( false === str.endsWith(right) ) {\n            return str + right;\n        }\n        return str;\n    }\n\n    public static stripLeft(str: string, left: string): string {\n        if ( str.startsWith(left) ) {\n            return str.substr(left.length);\n        }\n        return str;\n    }\n\n    public static stripRight(str: string, right: string): string {\n        if ( str.endsWith(right) ) {\n            return str.substr(0, str.length - right.length);\n        }\n        return str;\n    }\n\n    public static ucfirst(string) {\n        return string[ 0 ].toUpperCase() + string.slice(1);\n    }\n\n    public static lcfirst(string) {\n        return string[ 0 ].toLowerCase() + string.slice(1);\n    }\n\n    public static parameters(str: string, params: Record<string, string>) {\n        Object.entries(params).forEach(([ key, value ]) => str = str.replace(new RegExp(':' + key, 'g'), value));\n        return str;\n    }\n\n}\n\n/**\n *\n * @param obj\n * @param k\n * @param v\n * @example\n *\n * params = Object.entries(params).filter(([ key, value ]) => {\n *     return value.toString().length > 0;\n * }).reduce(utils.objectify, {});\n *\n */\nexport const objectify = (obj, [ k, v ]) => ({ ...obj, [ k ]: v });\n\n\nexport function paramsToQueryString(params:any):string{\n    return encodeURIComponent(btoa(JSON.stringify(params)));\n}\nexport const mergeObjects = <T extends object = object>(target: T, ...sources: T[]): T  => {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (source === undefined) {\n        return target;\n    }\n\n    if (isMergebleObject(target) && isMergebleObject(source)) {\n        Object.keys(source).forEach(function(key: string) {\n            if (isMergebleObject(source[key])) {\n                if (!target[key]) {\n                    target[key] = {};\n                }\n                mergeObjects(target[key], source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        });\n    }\n\n    return mergeObjects(target, ...sources);\n};\n\nconst isObject = (item: any): item is object => {\n    return item !== null && typeof item === 'object';\n};\n\nconst isMergebleObject = (item): boolean => {\n    return isObject(item) && !Array.isArray(item);\n};","import { Client } from './Client';\n\n\nexport abstract class Resource {\n    constructor(protected client:Client) {\n\n    }\n}","import { Resource } from './Resource';\nimport { ClientResponse, RequestConfig } from './types';\n\n\nexport class Streams extends Resource {\n    async get<T>(config: RequestConfig = {}): Promise<ClientResponse<T[]>> {\n        return this.client.request('get', '/streams', config);\n    }\n\n    async find<T>(stream: string | number, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('get', `/streams/${stream}`, config);\n    }\n\n    async post<T>(data: any, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n\n        return this.client.request('post', '/streams', config);\n    }\n\n    async patch<T>(config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('patch', '/streams', config);\n    }\n\n    async put<T>(config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('put', '/streams', config);\n    }\n\n    async delete<T>(stream: string | number, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('delete', `/streams/${stream}`, config);\n    }\n}","import { MimeType, RequestHeader, RequestHeaderValue } from '../types';\n\nexport class FetchHeaders extends Headers {\n    constructor(init?: HeadersInit) {\n        super(init);\n    }\n\n    set(key: RequestHeader, value: RequestHeaderValue) {\n        super.set(key, value);\n    }\n\n    Accept(mime: MimeType) {\n        this.set('Accept', mime);\n        return this;\n    }\n\n    ContentType(mime: MimeType) {\n        this.set('Content-Type', mime);\n        return this;\n    }\n\n    IfNoneMatch(etag: string) {\n        this.set('If-None-Match', etag);\n        return this;\n    }\n\n    basic(username: string, password: string) {\n        return this.authorization('Basic', btoa(username + ':' + password));\n    }\n\n    bearer(token: string) {\n        return this.authorization('Bearer', token);\n    }\n\n    authorization(key: 'Basic' | 'Bearer', value: string) {\n        this.set('Authorization', key + ' ' + value);\n        return this;\n    }\n\n    toObject() {\n        let obj = {};\n        for ( const header of this[ 'entries' ]() ) {\n            obj[ header[ 0 ] ] = header[ 1 ];\n        }\n        return obj;\n    }\n}","import { ClientResponse, RequestConfig,ResponseType } from '../types';\nimport { FetchHeaders } from './FetchHeaders';\n\nexport class FetchRequest extends Request {\n    response: ClientResponse;\n    headers: FetchHeaders;\n    responseType:ResponseType;\n\n    constructor(input: RequestInfo | URL, init: RequestConfig = {}) {\n        super(input, init);\n        this.responseType = init.responseType || 'json';\n        delete this.headers;\n        Object.defineProperty(this, 'headers', {\n            value   : new FetchHeaders(init.headers),\n            writable: false,\n        });\n    }\n\n    isResponseType(responseType:ResponseType){\n        return this.responseType === responseType\n    }\n\n    fetch(): Promise<this> {\n        return fetch(this.url, this).then(async (response: ClientResponse) => {\n            this.response    = response;\n            response.request = this;\n            return this;\n        });\n    }\n}","import { FetchRequest } from './fetch/FetchRequest';\nimport { ClientResponse } from './types';\n\n\nexport class RequestError extends Error {\n    public get response(): ClientResponse { return this.request.response;}\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly url: string;\n\n    constructor(public readonly request: FetchRequest) {\n        super(`HTTP ${request.response.status} error:\\n ${request.response.statusText}`);\n        this.status= request.response.status\n        this.statusText= request.response.statusText\n        this.url= request.response.url\n    }\n}","import { mergeObjects, Str } from './utils';\nimport { Streams } from './Streams';\nimport { FetchRequest } from './fetch/FetchRequest';\nimport { ClientResponse, RequestConfig } from './types';\nimport { Middleware } from './middleware';\nimport { RequestError } from './RequestError';\n\nexport interface ClientOptions {\n    baseURL: string,\n    request?: RequestInit;\n}\n\nexport interface ClientConstructorOptions extends ClientOptions {\n    middlewares?: Middleware[];\n}\n\nexport class Client {\n    public options: ClientOptions;\n    public readonly streams: Streams;\n    public readonly middlewares: Middleware[] = [];\n\n    constructor(options: ClientConstructorOptions) {\n        options                        = {\n            middlewares: [],\n            ...options,\n        };\n        this.options                   = {\n            baseURL: '',\n            request: {\n                mode   : 'cors',\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                },\n            },\n        };\n        const { middlewares, ...opts } = options;\n        this.options                   = mergeObjects(this.options, opts);\n        this.middlewares               = middlewares;\n        this.streams                   = new Streams(this);\n    }\n\n    public use(middleware: Middleware) {\n        this.middlewares.push(middleware);\n    }\n\n    public async request(method: string, uri: string, config: RequestConfig = {}): Promise<ClientResponse> {\n        let url     = Str.ensureRight(this.options.baseURL, '/') + Str.stripLeft(uri, '/');\n        config      = {\n            ...this.options.request,\n            method,\n            ...config,\n        };\n        let request = new FetchRequest(url, config);\n        for ( const middleware of this.middlewares ) {\n            if ( typeof middleware.request === 'function' ) {\n                request = await middleware.request(request, this);\n            }\n        }\n        return request\n        .fetch()\n        .then(async (request) => {\n            if ( !request.response.ok ) {\n                throw new RequestError(request);\n            }\n            for ( const middleware of this.middlewares ) {\n                if ( typeof middleware.response === 'function' ) {\n                    request.response = await middleware.response(request.response, this);\n                }\n            }\n            return request.response;\n        })\n        .catch(error => {\n            for ( const middleware of this.middlewares ) {\n                if ( typeof middleware.error === 'function' ) {\n                    middleware.error(error, this);\n                }\n            }\n            return error.response;\n        });\n    }\n}","import { Client } from '../Client';\nimport { FetchRequest } from '../fetch/FetchRequest';\nimport { ClientResponse } from '../types';\nimport { RequestError } from '../RequestError';\n\n\nexport abstract class Middleware {\n    request?(request: FetchRequest, client:Client): Promise<FetchRequest>\n\n    response?(response: ClientResponse,client:Client): Promise<ClientResponse>\n    error?(error: RequestError,client:Client): void\n}","import { Middleware } from './Middleware';\nimport { Client } from '../Client';\nimport { FetchRequest } from '../fetch/FetchRequest';\n\nexport interface BasicAuthorizationMiddlewareOptions {\n    type: 'basic';\n    username: string;\n    password: string;\n}\n\nexport interface BearerAuthorizationMiddlewareOptions {\n    type: 'bearer';\n    token: string;\n}\n\nexport type AuthorizationMiddlewareOptions =\n    BasicAuthorizationMiddlewareOptions\n    | BearerAuthorizationMiddlewareOptions\n\nexport class AuthorizationMiddleware extends Middleware {\n    constructor(public options: AuthorizationMiddlewareOptions) {\n        super();\n    }\n\n    public async request(request: FetchRequest, client: Client): Promise<FetchRequest> {\n        if ( this.options.type === 'basic' ) {\n            request.headers.basic(this.options.username, this.options.password);\n        } else if ( this.options.type === 'bearer' ) {\n            request.headers.bearer(this.options.token);\n        }\n        return request;\n    }\n}","\nexport class Transformer {\n    static compressor = (value:string):string => value;\n    static decompressor = (value:string):string => value;\n    static typePrefix = '__ls_';\n    static get prefixesLength(){return this.typePrefix.length + 5}\n\n    static compress(value) {\n        // return this.typePrefix + 'lz-s|' + lzs.compressToUTF16(value);\n        return this.typePrefix + 'lz-s|' + this.compressor(value);\n    }\n\n    static decompress(value) {\n        let type, length, source;\n\n        length = value.length;\n        if ( length < this.prefixesLength ) {\n            // then it wasn't compressed by us\n            return value;\n        }\n\n        type   = value.substr(0, this.prefixesLength-1);\n        source = value.substring(this.prefixesLength);\n\n        if ( type === this.typePrefix + 'lz-s' ) {\n            // value = lzs.decompressFromUTF16(source);\n            value = this.decompressor(source);\n        }\n\n        return value;\n    }\n\n    static encode(value) {\n        if ( Object.prototype.toString.call(value) === '[object Date]' ) {\n            return this.typePrefix + 'date|' + (value as Date).getTime().toString();\n        }\n        if ( Object.prototype.toString.call(value) === '[object RegExp]' ) {\n            return this.typePrefix + 'expr|' + value.source;\n        }\n        if ( typeof value === 'number' ) {\n            return this.typePrefix + 'numb|' + value;\n        }\n        if ( typeof value === 'boolean' ) {\n            return this.typePrefix + 'bool|' + (value ? '1' : '0');\n        }\n        if ( typeof value === 'string' ) {\n            return this.typePrefix + 'strn|' + value;\n        }\n        if ( value === Object(value) ) {\n            return this.typePrefix + 'objt|' + JSON.stringify(value);\n        }\n\n        // hmm, we don't know what to do with it,\n        // so just return it as is\n        return value;\n    }\n\n    static decode(value) {\n        let type, length, source;\n\n        length = value.length;\n        if ( length < this.prefixesLength ) {\n            // then it wasn't encoded by us\n            return value;\n        }\n\n        type   = value.substr(0, this.prefixesLength-1);\n        source = value.substring(this.prefixesLength);\n\n        switch ( type ) {\n            case this.typePrefix + 'date':\n                return new Date(parseInt(source));\n\n            case this.typePrefix + 'expr':\n                return new RegExp(source);\n\n            case this.typePrefix + 'numb':\n                return Number(source);\n\n            case this.typePrefix + 'bool':\n                return Boolean(source === '1');\n\n            case this.typePrefix + 'strn':\n                return '' + source;\n\n            case this.typePrefix + 'objt':\n                return JSON.parse(source);\n\n            default:\n                // hmm, we reached here, we don't know the type,\n                // then it means it wasn't encoded by us, so just\n                // return whatever value it is\n                return value;\n        }\n    }\n}\n","import { Middleware } from './Middleware';\nimport { ClientResponse } from '../types';\nimport { FetchRequest } from '../fetch/FetchRequest';\nimport { Client } from '../Client';\nimport { Transformer } from '../Transformer';\n\nconst isCacheableMethod       = (request: FetchRequest) => ~ [ 'GET', 'HEAD' ].indexOf(request.method.toUpperCase());\nconst getBase64UrlFromRequest = (request: FetchRequest) => btoa(request.url);\n\nexport interface ETagMiddlewareOptions {\n    manifestKey?: string;\n    compression?: boolean;\n}\n\nexport interface ETagCacheValue {\n    etag: string;\n    value: any;\n}\n\nclass ETagCache {\n\n    public transformer      = Transformer;\n    public storage: Storage = localStorage;\n\n    protected get options() {return this.middleware.options;}\n\n    protected get manifestKey(): string {return this.options.manifestKey;}\n\n    constructor(protected middleware: ETagMiddleware) {}\n\n    public get(key: string): ETagCacheValue | undefined {\n        if ( !this.has(key) ) {\n            return undefined;\n        }\n        let strValue = this.storage.getItem(key);\n        if ( this.options.compression ) {\n            strValue = this.transformer.decompress(strValue);\n        }\n        return this.transformer.decode(strValue);\n    }\n\n    public has(key: string): boolean {\n        return !!this.storage.getItem(key);\n    }\n\n    public set(key: string, etag: string, value: any) {\n        this.addToUuidManifest(key);\n        let strValue = this.transformer.encode({ etag, value });\n        if ( this.options.compression ) {\n            strValue = this.transformer.compress(strValue);\n        }\n        this.storage.setItem(key, strValue);\n        return this;\n    }\n\n    public unset(key: string): this {\n        this.storage.removeItem(key);\n        return this;\n    }\n\n    public clear() {\n        this.getUuidManifest().forEach(uuid => this.unset(uuid));\n        this.storage.setItem(this.manifestKey, this.transformer.encode([]));\n        return this;\n    }\n\n    protected getUuidManifest(): string[] {\n        if ( !this.has(this.manifestKey) ) {\n            this.storage.setItem(this.manifestKey, this.transformer.encode([]));\n        }\n        let value=this.storage.getItem(this.manifestKey);\n        if(typeof value !== 'string'){\n            return [];\n        }\n        return this.transformer.decode(value);\n    }\n\n    protected addToUuidManifest(uuid) {\n        let manifest = this.getUuidManifest();\n        manifest.push(uuid);\n        this.storage.setItem(this.manifestKey, this.transformer.encode(manifest));\n    }\n}\n\n\nexport class ETagMiddleware extends Middleware {\n    public readonly cache: ETagCache;\n    public options: ETagMiddlewareOptions;\n    protected enabled: boolean = true;\n\n    constructor(options: ETagMiddlewareOptions = {}) {\n        super();\n        this.options = {\n            compression:false,\n            manifestKey: 'streams_api_cache',\n            ...options,\n        };\n        this.cache   = new ETagCache(this);\n    }\n\n    public enable(): this {\n        this.enabled = true;\n        return this;\n    }\n\n    public disable(): this {\n        this.enabled = false;\n        return this;\n    }\n\n    public async request(request: FetchRequest, client: Client): Promise<FetchRequest> {\n        if ( this.enabled && isCacheableMethod(request) ) {\n            const uuid             = getBase64UrlFromRequest(request);\n            const lastCachedResult = this.cache.get(uuid);\n            if ( lastCachedResult ) {\n                request.headers.IfNoneMatch(lastCachedResult.etag);\n            }\n        }\n        return request;\n    }\n\n    public async response(response: ClientResponse, client: Client): Promise<ClientResponse> {\n        if ( this.enabled && isCacheableMethod(response.request) ) {\n            if ( response.headers.has('etag') ) {\n                this.cache.set(getBase64UrlFromRequest(response.request), response.headers.get('etag'), response.data);\n            }\n        }\n        return response;\n    }\n}","import { Middleware } from './Middleware';\nimport { ClientResponse } from '../types';\nimport { Client } from '../Client';\n\n\nexport class ResultDataMiddleware extends Middleware {\n    public async response(response: ClientResponse, client: Client): Promise<ClientResponse> {\n        const request = response.request;\n        if ( request.isResponseType('arraybuffer') ) {\n            response.data = await response.arrayBuffer();\n        } else if ( request.isResponseType('blob') ) {\n            response.data = await response.blob();\n        } else if ( request.isResponseType('document') ) {\n            response.data = await response.formData();\n        } else if ( request.isResponseType('json') ) {\n            response.data = await response.json();\n        } else if ( request.isResponseType('stream') ) {\n            response.data = await response.body;\n        } else if ( request.isResponseType('text') ) {\n            response.data = await response.text();\n        }\n        return response;\n    }\n}","export * from './AuthorizationMiddleware';\nexport * from './Middleware';\nexport * from './ETagMiddleware';\nexport * from './ResultDataMiddleware';\n","import {Client} from './Client';\nimport { AuthorizationMiddleware,Middleware,ETagMiddleware,ResultDataMiddleware } from './middleware';\nimport { FetchRequest } from './fetch/FetchRequest';\nimport { FetchHeaders } from './fetch/FetchHeaders';\nexport * from './middleware'\nexport {Client,FetchHeaders,FetchRequest,Middleware,ETagMiddleware,ResultDataMiddleware};\n\n// @ts-ignore\nglobal['streams_api'] = {Client,AuthorizationMiddleware,FetchHeaders,FetchRequest,Middleware,ETagMiddleware,ResultDataMiddleware};\n\ninterface Window {\n    streams_api:{\n        Client: typeof Client\n        AuthorizationMiddleware:typeof AuthorizationMiddleware\n        FetchHeaders:typeof FetchHeaders\n        FetchRequest:typeof FetchRequest\n        Middleware:typeof Middleware\n        ETagMiddleware:typeof ETagMiddleware\n        ResultDataMiddleware:typeof ResultDataMiddleware\n    }\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}