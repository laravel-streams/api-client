{"version":3,"sources":["utils.ts","Resource.ts","Streams.ts","fetch/FetchHeaders.ts","fetch/FetchRequest.ts","RequestError.ts","Client.ts","middleware/Middleware.ts","middleware/AuthorizationMiddleware.ts","Transformer.ts","middleware/ETagMiddleware.ts","middleware/ResultDataMiddleware.ts","middleware/index.ts","index.ts"],"names":[],"mappings":";;;;;;;;;;;;ICGsB,AQFT,AFKS,QNHQ,EMGE,CELR,0BRGpB,kBAAsB,MAAa,EAAA;EAAA,AQHf,AFKQ;AAAA,ENFN,EQHF,ERGE,CAAA,MAAM,GAAN,MAAM;AAE5B,AMAJ,CNAK,CQLmB,KFKxB,CAAA,UAAA,GAAA,UAAA;ANHA,EQFwB,KRExB,CAAA,QAAA,GAAA,QAAA;IQFwB;IAAA,KAIpB,eAAyB;ITJhB,ESImB,CTJhB,MSIuB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;ETJjD,ESIiD;EAAC,ETJlD;EAAA,EKGH,AICqD,YJDxC;EAAA,ALHV,ESIkD,OAE9D,kBAAgB,KAAK,EAAA;EJHC,ELHV,ESOR;EJEJ,ELTY,ESQR,KTPG,ESOI,IAAI,CAAC,MJCY,IIDF,CTPM,EKQiB,AIDpB,EJCoB,KIDb,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AGTjE,IPUqD,AIAjD,ETRgC,IAAX,EYFzB,CAAA,GZE+B,IYF/B,CAAA,2BAAA,CAAA,EAAA,OAAA,CAAA,4BZEkC,EAAE;AYDpC,EHSK,EJAgD,AFRxC,EHCL,IAAI,EYFZ,CAAA,CZEgB,EGDU,CHCD,EAAE,CYF3B,CAAA,cAAA,CAAA,EAAA,OAAA,CAAA;ACDA,ADEA,ETA0B,EESlB,AIDH,AIVL,EbIQ,IAAM,EaJd,ADEA,CAAA,ECFA,GbIsB,EYFtB,CAAA,AZEyB,CaJzB,CAAA,UAAA,CAAA,KDEA,CAAA,EAAA,GPSsB,IOTtB,CAAA,EPS6B,CAAC,QAAQ,CAAC,MAAM,iBLP4C,MKO/B,OAAO,CAAC,QAAQ,CAAC,UAAU;AQN7E,ADFR,ETD0B,EEQM,AIA3B,EILG,AbAA,CaAA,GRKwB,CIE5B,ATPU,CYFd,CAAA,EZEkB,CAAC,CKKoB,ELLjB,CKKU,AOPhC,AZEuB,CaAf,ADFR,CCEQ,AbAiB,CAAC,GAAG,CKKU,EQL/B,EJOc,AIPd,CbA2B,EAAE,CAAC,CSOX,CTPc,CSOd,CIPnB,AbAoC,EaApC,IDFR,CAAA,EAAA,OAAA,CAAA;ETAI,AUEI,EROA,EICA,ETPI,EKMC,AICD,EIRJ,AbCQ,ESOA,AIRR,EROW,AICD,ATPE,EaDZ,CROa,GICG,EAAE,ANVV,AHGY,CAAC,CKMD,CAAC,CFTK,EMUF,ANVE,CHGC,CAAC,GKMC,CAAC,ALNE,CAAC,KKMG,ALNE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;EaDxE,ERQA,AFV0B,CUE1B,CJUA,CIVA,GRQK,EIEC,GAAG,KJFM,AIED,CAAC,CIVf,CRQiB,IIEI,GJFG,CAAC,QAAQ,CAAC,UAAU;IAC5C,AFX0B,AUE1B,EJWA,ATRA,IKMK,AIEA,CIhBL,ERcQ,ALND,GKMG,AIEC,CTRA,ESQG,AIhBd,CAAA,GRciB,AIEC,CJFA,AIEC,EIhBb,GVIA,GEUoB,CAAC,AFVjB,GEUoB,EIEG,EAAG;ENXxC,AULU,ERcwB,ALLlC,ISQQ;AIjBE,CAAA,CReV,AFVC,AULS,AbST,MSSO,OAAO,KAAK;AIjBxB,ERcK,EFVA,AUJL,AbQK,YaRL,GAAA,OAAA,CAAA,cAAA,CAAA;AAIyC,IRUpC,AFVA,AHIA,ESYG,AIhBiC,CAAA,GJgB7B,CNdR,AHIO,ESUM,KAAK,CAAC,EIhBkB,CAAA,EVEjC,CMcqB,CAAC,CAAC,ANdL,EMcO,ANdL,AUFa,EAAA,AbMZ,ESUQ,CAAC,ANde,AHIb,EGJa,AHIX,IAAY,EAAA,CaNb,EAAA,GJgBW,GAAC,CAAC,CAAC;EIhBd,ERUpC,EIOG,ANdA,AHIA,GKPJ,CLOS,ESUC,AIjB2B,EAAA,CJiBxB,ATVC,GaPuB,EJiBnB,ATVC,CSUA,ETVG,CKPH,ALOI,MSUK,CAAC,GTVI,CSUA,ATVC,CSUA,GTVI,CAAC,EAAG,QSUM,CAAC,yBNdnC,GAAG,EAAE,KAAK;EUHa,EVIrC,CUJqC,CRAG,AImBpC,CInBiC,CbQ7B,ESWC,GJnBsC,CImBlC,CTXE,EKRoC,CAAC,CImBlC,ATXC,GaRkB,AbQf,CSWA,CAAC,CJnBoC,ALQlC,CKRmC,QAAQ,AImBnC,GAAG,MAAM,EAAG;ENf5C,EEJoE,AQAhC,IJoB7B,GIxBqB,YAAA,CAAA,UAAU;ERI+B,AQJ/B,EVQtC,EHMG,ESWI,KAAK,ATXF,GSWK,ATXF,ISWM,CAAC,YAAY,CAAC,MAAM,CAAC;AIzBF,CAAA,CRI+B,AQJ/B,EVQtC,AHOD,OGLA,gBAAO,IAAc,EAAA;AENiD,AQAtB,EbW/C,ISaG,ANjBA,AUP4C,CAAA,GVOxC,CAAC,EMiBE,CNjBC,CAAC,GMiBG,GIxBgC,CAAA,CVO3B,EAAE,IAAI,AUPqB,CVOpB,CUPoB,ERDlB,KAAK,SQCa,EAAA;ARDpD,EQCoD,EJyBhD,ATdC,EGHG,CETR,CAAA,IQCoD,CVQrC,CURqC,GVQjC,CURiC,ERDpD,GAAA,YAAA;EI0BK,AIzB+C,EVShD,AHEC,CaX+C,EAAA,IbazC,WabyC,UbatB,GAAW,EAAE,KAAa,EAAA;EGJnD,EMgBA,AIzB+C,Ebc5C,IAAK,CalB+B,IbkB1B,KAAK,GalBqB,AbkBlB,CalBkB,AbkBjB,QAAQ,CAAC,KalBsB,AbkBjB,CAAC,EAAG;EalBa,EJ6BrD,ANhBA,IHMO,GSYR,ITZe,GAAG,GAAG,KAAK,CSYZ,KAAK,EAAA;APhCvB,AWC0D,ALD1D,AEAA,ACAA,CEC0D,CAAA,EXD1D,ACcK,AKdL,AEAA,ACAA,EFiCQ,IAAK,CNjBT,GDhBJ,EOiCmB,ADjCnB,AEAA,ACAA,CTAA,AOiCoB,EDjCpB,AEAA,ACAA,KTAA,CAAA,COiC6B,ADjC7B,AEAA,ACAA,CFiC8B,ADjC9B,AEAA,ACAA,KRgBgB,GMiBsB,CAAC,ANjBT,CDhB9B,CAAA,ACgB8B,EMiBa,CAAC,ADjC5C,AEAA,ACAA,CHAA,AEAA,ACAA,IFiCiD,CAAC,KAAK,eAAe,EAAG;APjCnC,AWK6B,ALLzB,AEI1C,ACJ0C,ITI7B,AMeA,AEfb,ACCa,ERYL,AUZ2D,AbiB3D,CajB2D,CJ6BvD,ENjBA,CDbS,ACaR,EHKE,CGLC,CMiBG,ANjBF,CHKC,CUlBlB,ED8BuB,CAAC,AC9BxB,CGCmE,CAAA,EFAjC,GHcG,AEfrC,CAAA,CPa+B,AUZoC,CJ6BjC,CNjBD,AUZkC,EJ6B9B,ENjBA,CAAC,IMiBM,GAAI,CC9BhD,CAAA,GD8B8D,CAAC,II7BI,EAAA,CJ6BG,EAAE,CAAC,QAAQ,EAAE;AC5BnF,ERFqB,AWC8C,ALc9B,AGdH,EDC5B,AViBF,EGLI,MUb2D,CVapD,CUboD,GVahD,CUbgD,GHC5C,GAAS,SAA1B,iBAAiB,CAAU,OAAqB;ANLtD,EFGqB,AWC8C,ALc9B,AEbiB,ACDpB,AXkB7B,EGJD,AClBJ,CSImE,CJ+B3D,CI/B2D,EHCR,CD8B9C,AC9BgD,CAAE,KD8B5C,AC9BiD,CD8BhD,CLnCpB,AMKsE,GNLtE,CSImE,EHCS,CAAE,CD8BjD,AC9BkD,CD8BjD,CLnC9B,CAAA,IMKsF,CAAC,CD8BjD,CAAC,IAAI,CAAC,AC9BkD,CAAC,GNL/F,CKmCiD,ALnCjD,CKmCkD,CC9BmD,CAAC,GD8B/C,QC9B0D,EAAE,CAAC,MD8B5C,EAAG;ALnC7B,AMKsE,ERF/F,ACehB,AKCD,AGf8B,EPFrB,ASEsD,AbkB9D,IScO,GIpC+C,IJoCxC,CLlCO,GKkCH,CAAC,GIpCmC,CAAA,MJoCzB,GAAG,EDjBd,KCiBqB,EDjBkB,CCiBf,CIpCgC,ALmBjB,ICiBV,CAAC,MAAM;AC9B3D,ENJ0B,ASFqD,EXG1D,ACehB,AKCyD,AEbxD,ACF4B,AXkB7B,OAEM,gBUlBkB,GAAG,AVkBJ,GAAW,EAAE,IUlBnC,AVkB+C,EAAA,qBUlBxB,CAAI,OAAqB;AJPtD,AOC+E,CAAA,CTErD,ASFqD,AHMzB,EJPtD,AJIqB,ACehB,AKCyD,AGf5B,EFkC1B,ATbA,GUnBmD,CDgC9C,ATbA,CM1Bb,AHqBI,EOd2D,AVmB/C,CM1BhB,AIOgE,AVmB/C,GSaG,IHvCpB,AIOuE,CJPvE,AGuCyB,AChC+C,EVmB7C,CUnBgD,AVmB/C,CUnBgD,CDgC9C,ETbE,CAAC,CM1BjC,CAAA,AHqBgB,AHKoB,GSaE,CNlBV,CMkBa,CNlBb;AGpB5B,AOCA,AHK4E,ERHvD,AEIjB,AOH8B,ELJlC,AOCA,ALmBQ,ELCA,EMkBI,ATbA,EGLA,CAAC,EGrBb,CHqBgB,CMkBG,ANlBF,AHKE,CM1BnB,EOCA,AbyBsB,CSaC,ATbA,CSaC,CItCxB,EPDA,CAAA,AFOgB,CJmBa,CAAC,EazB9B,CTMwC,ASNxC,CJsCkC,ANlBF,AHKE,CInBgC,AJmB/B,CGLD,CMkBG,EHvCrC,CAAA,AHqBsC,CAAC,AHKE,CAAC,ESaE,GAAG,KAAK,GItCpD,CAAA;APAA,AOG4B,AHEiD,ERHxD,ASCa,ELHlC,AFMkE,AIY3C,AEDjB,EPIE,AUlBoB,CAAA,GLeL,GLGR,AOJA,IPII,AKHW,CFlB9B,EEkBuB,CFlBvB,AOG4B,CAAA,KLeE,CFlB9B,CAAA,AOG4B,EAAA,cAAA,EAAA,IPH5B,CAAA;AAGA,EOA4B,AHuBxB,EJvBJ,AJDqB,ACoBjB,AChB8D,AIYJ,AGf5B,EFqC1B,ATbA,EIrBkC,EKkC7B,ELlC6B,ASHd,CbwBb,CaxBa,EbwBV,CSaE,CHrCpB,AOA4B,GPA5B,AIuB0B,CDcD,KAAK,CHrC9B,CAAA,EIuBoD,EAAA,GDcb,EAAG,OHrC1C,CAAA,qCFGgE,CAAA,CAAE;AEHpB,EHmBzC,AUnBuB,ALiBxB,EFNS,AJZQ,AEI6C,AMoBd,ACvBlB,AXyB9B,CazBwB,EAAA,CJsChB,EH3BO,CJXT,ASCO,IFqCE,IAAI,CAAC,EItCI,IXAe,GSCjB,CFqCQ,GAAG,KErCa,EFqCN,AErCQ,IFqCJ,EErCkB,EAAA,CFqCb,GAAG,GAAG,GAAG,GAAG,CAAC;EHtB9D,AECC,ARQA,EGNA,ACfG,ASJoB,AHuBF,ERvBiB,EQuBjB,CAAA,CRvBT,CWHR,KXGQ,EIgBD,CIOoB,GAAV,GJPuB,AOnBxC,CAAA,CPmBwC,GFZnC,EMmBsB,GNnBjB,EAAE,CSPA,GTOI,8CFJgB,CAAA,CAAE;EWHtB,EPmB4B,AHG5C,ACdG,AIYH,AEDM,AVSN,ESeG,ECxBG,CAAA,CDwBE,ALnCA,CDgBT,MMmBgB,GCxBE,EDwBG,ALnCA,CMWK,ENXF,CDgBlB,CMmBoB,ELnCE,CAAC,IDgBP,CMmBY,CNnBV,AOLE,CDwBW,ACxBX,KNXe,EDgBD,EAAA,AChBK,EMWR,INXc;ASRlC,CAAA,CAAA,EPiBD,AFRZ,AIWH,AEAM,AVQN,EGHG,EGRY,AG2BR,ACxBD,CJHS,AIGT,ENXI,AIaE,ARQN,EGLI,EMmBI,CCxBD,CPKC,AChBC,CDgBA,CMmBG,ACxBO,CJHC,AG2BP,GH3BwB,CFRrB,CEQuB,GEKzB,ECsBS,CNnBD,AOLS,AVUb,CGLK,CMmBG,CTdG,EQRM,ARQJ,EQRM,CLGP,CMmBG,CNnBD,AHKY,EScR,ATdQ,CQRO,CLGf,CAAC,AKHc,ECsBV,MNnBI,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC;AUxB3E,EHyBuD,EJN/C,AHMJ,AChBI,ASTR,Eb8BQ,IIrBM,AJqBD,CMXE,AFVA,EJqBC,CMXD,ANWE,Ia9BjB,EPmBe,CAAA,AOnBf,Cb8ByB,CAAC,EIrBG,EEUd,CAAA,AOnBf,Ab8B+B,Ca9B/B,Ab8BgC,EAAG,oBa9BnC,CAAA,KTSoC,SAAS,EAAE;ASPhC,EVuBV,AOAmD,IJL5C,AGyBJ,ALnCI,ASRG,CAAA,Cb6BH,EScC,CLnCI,EAAK,EKmCJ,ATdC,EMXI,AFVG,CJqBJ,CMXG,ANWF,CScA,CI3CR,CAAA,Gb6Bc,CScA,ATdC,CScA,ATdC,Ea7BhB,Ab6BkB,EIrBP,ASRX,CJ2CoB,ALnCT,AJqBU,CScA,ATdC,EScE,ITdI,GAAG,EIrBR,CAAC,ASRxB,EAAA,Ab6BoC,CAAC,CIrBT,CAAC,IJqBc,CAAC,EIrBR,CAAC;ESRrC,EPkBY,AHKtB,AOAmD,CJL7B,CFTf,CEUG,CGyBH,II5CG,EPmBO,AFVF,ASTL,CPoBN,AGwBU,CLnCG,ESTP,CJ4CQ,CAAC,UAAU,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;EI5CrD,EPqBP,AHEH,AOAmD,CNb/C,ASVM,CTUL,AJqBF,Ca/BO,CPqBH,CAAC,AIFT,EPMA,EHMW,GMVK,AKnBN,AX6BI,GMVuB,GOrB1B,CFEM,CDiBI,ECjBD,CRuBb,KAAa,EAAA,CQvBQ,CAAC,OAAO,MTDzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC;IESlD,ASVI,AbgCX,EMVQ,AGyBJ,ANrBA,AOPqB,KGrBpB,EPwBU,AHIJ,AOPqB,CRlByB,CIqBxC,CKpBmB,CLoBjB,AHIJ,AOPqB,CPOpB,AOPqB,GChB5B,IELJ,CAAA,EHqB0C,AChB/B,CDgBgC,AChB/B,ERuBY,CAAC,IOPyB,EGrBtC,EV4BqB,EAAE,CQvBT,CAAC,GRuBa,CAAC,SQvBD,CAAC;EPQ9C,ASbiB,AbkChB,EGLD,AORwD,EJIhD,AGyBJ,OHzBW,CJtB0C,CIsBxC,CEHb,EGjB0C,EHiBrC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,EAAG;AKtBxB,CAAA,CV6BhB,AChBA,ASbgB,AHqBwC,EVaxD,ESiBG,EHzBQ,IAAI,CGyBL,CHzBU,EJvBoC,EOgDzC,AD5BR,AGlBsC,ELqBnB,MEHZ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AKtB/E,IJmDI,ANvBC,AChBA,AMQwD,AVaxD,IMPW,GNSL,CEjCkD,AWF7D,CAAA,EP0BuB,CKtB2B,CLsBzB,AEHhB,GKvBT,CAAA,ELuBe,IAAK,CRYM,GQZF,CAAC,ERYO,CanChC,CAAA,AbmCgC,EanChC,CLuBgC,CAAC,IAAI,CKvBrC,CAAA,GLuB0C,QAAQ,EAAG;AKpBrD,EJgDK,ENvBA,AChBA,AMQwD,EVgBrD,GUdJ,CJKgB,AJzByC,CC4BzD,AChBA,EJsBW,GWhCmC,EHoBtC,CRYS,CAAE,CAAC,CAAE,CAAC,CUdE,EFEV,CAAC,CFGkB,EAAE,IHGtB,AKNS,ARYW,CItBnB,AIUS,CRYY,CGNC,EAAE,AHMA,EQZT,CAAC,ELMqB,CHMP,CGNO,AKNjB,ARYW,CItBN,AIUJ,EJVI,EJsBW,CAAC,CAAC,CQZV,ARYW,CQZV,KAAK,CAAC;AKpBtD,IJ+CK,ATdD,EGNI,AChBA,ASXF,AHkBmC,CGlBlC,CXFsD,EC6BjD,CAAC,EChBE,AMOiC,CPShC,CAAC,CQ1BW,CPUT,AMOiC,CNPhC,AMOiC,EGlBjC,CAAC,EFCa,CEDV,CHkBoC,CAAC,IPS7B,AChBA,EDgBE,AQ1BQ,CAAC,ER0BN,AChBA,EMOmC,CPShC,GAAG,GAAG,AQ1BQ,EAAE,CPUP,EDgBE,CAAC;EU3B3B,AbiCpB,EScA,ALnCD,AMMqE,ERpBZ,AC8BrD,CD7BH,CWC0B,CXD1B,CWCoB,CJiDrB,ENrBW,CQ3ByC,EHoB/C,CLOU,CU5BM,CAAA,MAAM,EJiDb,KAAK,EAAA,eD3BR,QAAO;EJVjB,ASZ2B,AHkB0C,EPWtE,AHIC,CMPI,CGwBD,IAAI,IAAI,AD5BM,EC4BJ,AEjDN,MFiDY,EAAE,CIlD6B,AFCnC,CAAC,CEDW,GJkDA,AEjDP,SEDO,CAAA,uBAAuB;EXDlD,AC8BA,AU7BmD,EP2BhD,AFfH,AMMqE,AVerE,ESmBG,KTjBG,CSiBG,EIpDsD,ALsB9C,CC8BL,CIpDuC,AFC/B,GL0BgB,CGyBnB,CAAC,KHzByB,CGyBnB,CTjBH,EanC8B,CAAA,GbmCxB,EAAA,OanCoC;EAAC,EXDhE,AC8BA,ACjBA,AMMqE,EJS1D,AG0BR,ATjBA,ISiBK,CC/BF,EVcI,CapCkE,EJqD9D,AIrDkD,ALsB/C,AGrBG,CL0BE,EG0BL,ATjBD,CAAE,CAAC,CAAE,CSiBA,ATjBC,CSiBA,AC/BZ,GAAW,EJKV,AILU,CGtB2C,CAAA,GboC/B,EAAE,ESiBC,CTjBE,CMThB,AG0BiB,GIrDqC,EboChC,CAAC,KAAK,CAAC,CAAC,CAAC;EapCwB,EXD7E,AC8BA,AHQD,EMV4B,AFf3B,AMWG,ED+BI,EH3BwB,AIJvB,CRtBH,AC8BN,AORU,CGvB8E,ALsBtE,CFKc,CO3B8C,AFCzD,CDsBP,CAAC,GJIiB,AIJd,CJImB,AIJlB,GAAG,CAAC,CRtBT,CWDgE,AHuBpD,CJIkB,AO3BkC,EP2BpE,CAAA,CJ1B2B,AC8B7B,ED9ByD,IWDuB,MP2B9E,CAAwB,CAAU;EO3B6C,AbqCxF,EMTG,EJ3B6D,AC+B7D,EGJI,AG2BA,AL3CP,AMYO,CJIC,CJ3B8B,AC+B/B,AKVU,GLUP,EMuBI,AC/BA,CJIC,AJ3BuB,AC+BzB,AUhCyF,AFClF,CR+BP,CAAE,AUhCyE,CP4BpD,CAAA,AG2BjB,CH3BiB,AK1BrB,EL0BqB,CIJb,ICtBD,CAAC,CL0Ba,AO5BoD,CP4BpD,AO5BoD,YP4BxC,AK1BX,CAAC,CL0BW,AO5BqD,IP4BjD,CAAC,AK1BV,CAAC,ML0BgB,EAAE,IAAI,CAAC,uBJ3BN,CAAA,CAAE;EWDuC,EP6BpG,ANQH,EGLgB,ACpBhB,EEiBO,AEPU,CFOT,SK3BqC,EL2B1B,EO7BwG,CP6BvF,CO7BmE,UP6BxD,EO7BwD,CAAA,YViC9E,IAAI,CAAE,SAAS,CAAE,EAAE;AUjC+E,CAAC,GP8BzH,ANOH,ESqBG,AL9CH,AIUiB,AEId,CFHH,CFOO,AHGqC,CGHpC,AEPR,CCmCO,AChCA,CVaD,ESmBM,GH5BG,EG4BE,AChCF,ACxB8B,CL4BT,AG4BlB,EChCA,EJIsB,EG4BhB,AChCF,CDgCG,AChCF,CDgCG,EAAE,ETnBJ,CMTgB,CAAA,AG4BR,AChCF,CDgCG,AChCF,AVaI,EAAE,IMTU,CAAC,AIJV,CAAC,AVa4B,EAAA,CMTf,AIJV,CJIW,AIJV,EDgCI,GAAC,CAAC,CAAC;EH3BnD,IG4BI,AN1ByC,AONzC,AVaA,EI5BH,EMeQ,EDgCC,ATnBA,CAAC,CUbE,CDgCA,AChCC,CCzBgC,IFyD5B,ATnBA,CSmBC,ATnBA,CUbE,CAAC,IVaG,CAAC,CAAC,CSmBC,CAAC,GChCI,CDgCA,CAAC,AChCE,AVaF,CAAC,aSmBa,CAAC;EH5BhD,AERA,ICsCG,ALjDH,EDqBG,AOLI,AVY2B,MSqBtB,ECjCG,AC1B8B,EF2D7B,CCjCE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,IPKR;EKV/C,EFQA,EFnBA,EKkDO,EN7BwC,AHOV,GSsBzB,ATtB4B,CGPzB,EQ9BQ,CF2DP,CAAC,EN7BI,GQ9BQ,KF2DF,GAAG,CE3DO,CAAC,IF2DF,AE3DM,EAAE;AHoB5C,EAZwC,EFoBxC,AFnBA,EAED,AMgBI,IDiCQ,AN7BJ,AHMmC,CMPpC,EHCI,AOJA,CPIE,AKvB4B,AGRI,CHQJ,AR6BO,ESuB7B,ACjCJ,CNhBV,AMgBW,EPIG,CM6BI,AN7BF,CAAC,CAAE,CGDb,AHCe,CM6BC,ADpDwB,CCoDvB,CN7BC,EOJF,CAAC,GPIO,CGDF,AG8BG,AN7BC,CM6BA,AN7BC,CGDL,AHCO,AOJN,CAAC,IDiCQ,CAAC,CAAC,ECjCF,CAAC,IR5BjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,qBAAc,MAAM,GAAI,MAAM,CAAC;AMSvE,IEoBI,EJGI,AFpBC,CIHT,CCsDY,ADtDZ,AR6BoD,EMNxC,CAAC,EG+BI,CP/DsD,CFsCZ,CWrC/C,CF8DS,CAAC,ATzBwC,GAAG,CMNzC,CAAC,CNM2C,CWrChD,AXqCiD,CWrChD,CL+BQ,CAAC,AG+BE,EE9DP,CF8DU,ADtDnC,CR6B4E,CAAC,CQ7B7E,GCsDyC,ATzBwC,CMNzC,CAAC,INM8C,CAAC,GAAG,GAAG,GAAG,EAAE,EQ7BnG,CR6BsG,CAAC,EAAE,KAAK,CAAC;EUT1G,EJID,EHAK,ACpBD,AJyBuG,EAAC,ES0BhG,GLnDD,CFbwD,ESC9C,CF+DF,CLnDH,CAAC,EKmDM,ELnDF,CAAC,GKmDO,ALnDJ,CKmDK,CLnDH,IAAI,CKmDK,ALnDJ,CKmDK,ALnDJ,IAAI,CAAC,UAAO,QAAwB;EEoBpE,EIJA,EVUG,ES2BI,ANjCH,ACpBgE,KKqDxD,AT3BF,EI1B8D,CFbN,ASC9C,AXsCP,CS2BG,CAAC,MLrDuD,CAAA,GKqD7C,GAAG,ALrD0C,EAAA,IKqDpC,CLrDoC,CAAA,EAAA,KAAA,CAAA,0CAAA;IEoBxE,AIJA,AVWD,EGPK,IMkCO,ALtD6D,CMkBlE,CR/B4D,ESC9C,GFkEF,MAAM,CAAC,ACpCf,GAAW,EAAA,CDoCU,CAAC;ET3BhC,EMPA,EIDG,EDqCI,ANpCH,EDjC8D,CImCtD,CFtB4D,CKwD5D,ACrCF,CAAC,CAAC,CC/BQ,CFoEJ,CAAC,CCrCD,CAAC,CC9BF,MD8BS,CJGJ,AGkCO,ACrCF,AC9BH,CAAC,EFmEO,GHlCI,CIHF,CJGI,AIHH,CDqCG,EHlCW,AIHX,CAAC,CJGsC,EKjCtC,CAAC,UAAU,CAAC;EXsCjD,EUPD,EJE4E,AHFvE,EDjC8D,EImCjB,AGmCtC,ILzD6D,EEsBvB,CGmC/B,CEpE+B,MFoExB,CAAC,MAAM,KAAK,GAAG,CAAC,+CHnCgC,CAAA,CAAE;ANK3E,EUPA,IRjCkE,ACkC/D,CDjCH,COuEO,CPvEP,IOuEY,ANtCF,GAAG,ACrB2D,CK2DxD,CAAC,AEtEgC,UFsEtB,GAAG,MAAM;ATjFzC,IG4CI,AOFC,GV1CL,CAAA,ESkFgB,CTlFhB,GAAA,EWWsD,CFuE/B,ATlFvB,CIuBY,CK2Da,GAAG,AL3DZ,CAAC,KK2DiB,GL3DT,GAAM,QAAQ;AJ8BvC,EE3CK,ACkCA,EOFA,ID0CO,GCxCD,EDwCM,GEzEqC,CFyEjC,CAAC,AL5DV,MMoBG,ENpBK,CAAC,AMoBK,CDwCM,CCxCJ,EDwCO,ECxCK,CNpBZ,CMoBc,EDwCD,AL5DV,GMoBqB,CNpBjB,CMoBiB;EPA/C,EDlCA,EQmCG,IDwCQ,ACxCJ,CAAC,KCjCe,CFyEL,CL7Da,GK6DT,CAAC,CEzEM,IFyED,CAAC,ACxCJ,CAAC,GAAG,ACjCQ,CDiCP,ACjCQ,CFyEH,CAAC,MEzEU,EAAE,QPalC,IAAI;ADmBlB,IDlCA,EQoCG,EDyCI,ECzCA,CRlCF,GSA2C,EPa9B,EMqBH,GAAG,IRlCL,AQkCS,CAAC,GRlCD,EAA4B,ECXrB,IO6CK,CAAC,EP7CC,IO6CK,CAAC;AP7C/C,MDWuD,CCXvD,CAAA,AO6CiD,ERlCpB,AO4Eb,EC1CqC,EAAJ,ERlCpB,AEaN,AObX,EDkCyC,EP7CrD,GAAA,EQWoB,CAAC,IAAI,KRXzB,oDDWqD,CAAA,CAAE;QQkCA,ED2CvC,GC3C4C,EAAL,CClC9B,EPaF;MMqBqC,CAAE,CAAC,ED4C/C,ILjEO,EEoBX,AKjCa,GLiCV,GAAO,OAAA,CAAA,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,OAAA,CAAA,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC;MIElF,ID4CQ,AC5CH,ENtBU,EMsBN,ACnCQ,CDmCP,CJDV,CG6Ce,KH7CT,AG6Cc,AC5CH,CAAC,EJDZ,MAAA,CAAA,EICuB,EAAG,EJD1B,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAA,EAAA;MG4CN,EC3CjB,ENvBW,MMuBH,ACpCK,ELoCb,CIAW,ECnCH,EDmCO,CJAT,AIAU,EJAhB,EKnCe,CAAC,MDmCW,CAAC,OCnCE,CDmCM,ACnCL,CDmCM,KCnCA,CAAC,EDmCO,CAAC;ID6CtD,ILpEmB,CACd,EAAA,KEsBS,CAAA,CAAA,AKnCgC,ELoCnC,MAAM,CACZ;EG2CJ,ILnEI,AMwBD,ENxBE,EMwBE,CAAC,KJCD,EIDQ,ACrC8B,CDqC7B,IJCF,GAAG,AIDM,CAAC,GJCH,AIDM,EAAE,QAAQ,CAAC,GJCjB,CAAA,KJrCX,IAAI,CAAC,EIqCkB,CAAC,GAAG,AJrChB,CAAC,CIqCiB,MAAM,AJrChB,CIqCiB,AJrChB,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC;EO+EzD,ELlED,CAAC,CMwBG,OAAO,CRrC+C,EIqCX,AKtCD,CDsC/B,sCJCe,IAAI,CAAC,WAAW;AGyC7C,ELlEA,EMyBD,URtC0D,EIsCZ,AKvCA;AFblD,ATiEO,EItCF,AMyBA,EVaQ,GSjEb,CAAA,KTiEsB,GMb4B,AJtCY,ASAlC,AXmDH,GSjEzB,GAAA,CEckC,EXmDrB,OWnD6B,CFd1C,AEc2C,CXmDrB,CAAI,EWnDqB,CXmDlB,CWnDoB;AFbtC,AL0BN,EJsCwB,EUbxB,ODnDM,CPamD,AObnD,EHmDuC,AKtCD,QFb5B,GAAG,QLCU,EKDT,KAAY,ALCI;AAAzC,EKDqC,ECmDhC,AVa4B,CAAC,EI/DlC,CAAA,CKDiD,CPaa,CQwCnD,GDrD2C,EHmDJ,AKtCtC,IPZZ,GAAA,EOYoB,CDwCH,ACxCI,GDwCO,CCxCH,CDwCG,INpD5B;AKDsD,ITgElB,CAAC,CUV7B,ERzCsD,EQyClD,CAAC,KCzCY,ELsCyB,AIG9B,CAAC,UAAU,CAAC,GAAG,CAAC;ADrDzB,ET+D0B,IEnDyB,AQ0CtD,CRzCH,EAAA,AFkDuC,ES/DjC,CAAA,CCsDI,EVS6B,CWnDnB,AXmDmB,CUTzB,CJJ+B,INaN,CAAA,CS/DrB,GAAG,ET+DkB,CAAA,MAAA,CS/DjB,AT+DiB,CAAA,CAAA,EAAM,CS/DX,ET+Dc,CAAA,sBAAI,CAAC,EAAI,CAAC,EAAA;AAAA,CAAG,CS/D3B,ECuDnC,KDvD+C,KAAK,AEY/B,ELsCyB;AGlDM,AT+D3C,EElDR,AQ0CA,KVQQ,CAAA,QMbO,AKtCK,CXmDH,GAAA,CWlDF,KLqCU,EKrCH,CAAC,AXkDN,cWlDoB,CAAC,QAAQ,CAAC;AFZzC,ATiEX,IErDK,AQ0CA,KVWW,ESjEL,CAAA,IHiDmB,EKrCsB,ILsCnC,AGlDI,GAAG,GTiEW,CMfX,ANeY,GSjEL,GTiEe,EAAA,EMfZ,CAAC,OAAO,KAAK,UAAU;ENgBrD,EEtDC,AQ0CA,KVYM,EEpDD,AQ0CC,OJN8C,AKtCL,SXsDvB,CEpDgB,AQ0C7B,AVUc,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3D,MErD6C,AQ0C7B,IR1CG,MAAA,ASFiC,ELsCK,qEJpCd,CAAA,CAAE;AFmD7C,MURQ,CVQR,CAAA,EURY,CAAC,KJP4C,AKtCL,UD6CxB,CVQ5B,CUR8B,CAAC,CVQ/B,MURsC,CAAC,UAAA,EVQvC,EUR2C;AVWpC,IAAM,IUX8B,OAAI,CJPU,AKrC7B,AXuDH,GAAG,CUXuB,CAAC,EC5ClB,GD4CuB,CAAC,CVW7C,GUXiD,CAAC,AC5CrB,CAAC,IAAI,GXuDtB,CAA+B,MAAS,EAAyB;EAAA,IUX3B,EAAC,MC5CjB,ELsCrB,OAAM,UAAU,CAAC,ENiB2B,KMjBpB,CAAC,CNiB+B,MMjBxB,EAAE,IAAI,CAAC;INiBK,EUV9D,IAAI,CAAC,AVUqE,GMjBjB,EKtCrD,ED6CQ,CAAC,GAAG,CAAC,EC7CL,CAAC,CD6CQ,CAAC,EC7CL,SD6CgB,EAAE,EAAE,CAAC;EVUoC,IUT1E,OAAO,GJRC,AKtCS,CD8CN,MJRI;ENkBnB,EUTA,EVSI,CAAC,OMlBc,ANkBP,CAAC,CWxDQ,KXwDF,EAAE,2BEtDV,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC;EQ6C1D,EVUG,OAAO,GEvDgD,ASFtC,ELsCF,CNmBF;IUVhB,UR7C0D,EIoCxC,AKtCE,KACL,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC;EX0D9C,EUZC,EVYK,KUVI,CVUE,EMrBO,CNqBJ,CEzD4C,ESDb,IX0DxB,CAAC,KAAK,EAAE,QUVL;EVWzB,IUVI,AVUA,IUVK,CAAC,CRhDiD,AF0DjD,GUVI,CJZK,AIYJ,CVUA,CW3D+B,KDiDxB,CAAC,EVUC,CUVE,CAAC,AVUD,IUVK,CAAC,WAAW,CAAC,EAAG;IVW3C,IUVI,ERjDmD,CF2DhD,CUVC,CAAC,GJbM,AKrC2B,CX4D7B,GUVG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;QRjDa,MIoCxC,EKrC2B;EX+D9C,IE9D2D,AQmDvD,AVWA,CE7DH,EAAA,IQkDU,GJfQ,AKpCK,CDmDT,CAAC,IVWI,CW9DU,AX8DT,EUXE,CAAC,GAAG,AVWA,CUXC,AVWA,EW9DU,CAAC,CDmDP,AVWA,CUXC,ECnDU,EAAE,ODmDD,EAAE,EAAE,AVWA,CUXC,AVWA,MAAM,CAAC,EAAE;IUV1D,AVWI,MAAM,CAAC,GW/DkC,CX+D9B,CM3BI,AN2BH,MAAM,CAAC,CAAC,OAAO,CAAC,UAAS,GAAW,EAAA;EE9DnD,AQmDA,IVYO,IAAI,MM5BO,AKpCX,SAAQ,CAAC,AXgEW,CAAC,GWhER,GXgEc,CAAC,GAAG,CAAC,CAAC,EAAE;IE/D1C,AQmDA,IVaW,IAAI,CAAC,CM7BE,AKpCE,KXiEE,CAAC,GAAG,CAAC,EAAE;IEhE7B,AQmDA,MVce,CE/DV,AQmDI,KJlBS,AKpCE,AXkEC,CAAC,GAAG,CAAC,GAAG,CAAA,CE/DS,AF+DP,YUZJ,IAAI,EAAA,KCpDrB,SAAQ;MTCoB,AQoDnC,IRpDS,AQoDL,ICrDW,ELkCA,AJjCN,EQoDG,GAAG,IAAI,CAAC,eAAe,EAAE,4CRpDJ,CAAA,CAAE;MQqDnC,EVYQ,CAAA,CAAA,EAAA,EUZA,ACtDO,CDsDN,CJpBM,GIoBF,AVYL,CUZM,AVYN,IUZU,CAAC,OVYC,EAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;MUX9C,CVYK,GUZD,CAAC,EVYM,CMjCI,EKlCA,EDuDH,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC;IAChD,IVYY,IWpEO,EXoED,CAAC,CMlCA,ENkCG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,iBM/B1B,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAO,OAAO;EImB7C,QCxDkB,QLqC2B,OAAI,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,0CAAA;EImBjD,EVcG,CAAC,CAAC,EWtEa,YLqC+B;AImBjD,MCxDkB,CAClB,EAAA,WLoCiD,8BJnCvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC;AQsDxD,EViBD,EUbS,KVaF,CAAA,CAAA,EAAA,CEvEkD,IQ0DjC,EVajB,CAAA,CMpC2C,WNoC/B,iBAAC,MAAM,SAAK,OAAO,EAAC;AAC3C,CAAC,CUd2B,AC3DvB,YTCwD,UImCP;ANczC,EUSe,AC3DvB,KXkDQ,CAAA,QEjDgD,IFiDpC,GAAA,GMd6B,SNc7B;AWlDpB,AX2EL,EUXI,ACjFsC,EX4FpC,QE1EuD,AF0E/C,EW5F4B,CAAA,AX4FzB,SAAX,CW5F8C,GLqDE,AI4BH,IJ3BjC,ANsCJ,CAAI,IAAS,EMtCF,ANsCsB,CMtCrB,QAAQ,CAAC,EAAE;AKtDrC,EX6FI,EUZ+C,GCjFnD,CAAA,CX6FW,CE3EkD,GF2E9C,KAAK,IAAI,IAAI,EW7F5B,ELsDqC,CKtDrC,GX6FmC,IAAI,MAAK,OW7F5C,CX6FoD;AACpD,CAAC,GUbkD,IR/DU,AQ+D7C,OAAA,eJ3BqB,wDI2BY,CAAA,CAAE;AVenD,IUfmD,AVe7C,EE9EuD,CACxD,EAAA,WF6EiB,GAAG,KM1CY,IN0C/B,gBAAgB,CAAI,IAAI,EAAa;EACvC,EUfI,KVeG,QAAQ,CAAC,IAAI,CAAC,IAAI,CM3CQ,AN2CP,KAAK,CM1Cb,AN0Cc,IM1CV,GN0CiB,CAAC,IAAI,CAAC,KM1CvB,CAAA,YAAY,CAAC,OAAO,CAAC;AN2C/C,CAAC,CE/EI,EQ4DS,OAAA,OAAO,GAAY,IAAI,CJxBU;IJpC1C,AQgEG,OAAK,OAAO,GAAA,MAAA,CJ5B2B,AI4B3B,MAAA,CAAA,iCJ1BkB,IAAI,CAAC,WAAW;IJtCjD,EQiEO,KR/DF,MQ+Da,EAAC,KAAK,IJ3ByB,AJpClC,MAAuB,EAA4B;MAAA,AQgE3D,IRhEiC,MAAA,CQgEtB,EAAE,SJ5B6B,2DJpCe,CAAA,CAAE;IQgE3B,CAAA,EAC7B,OAAO,CACb,WJ9B6C;II+B9C,OAAK,KAAK,GAAK,IAAI,KJ/B2B,II+BlB,gCAAM;IAAC,0BJ/BW;EIgClD,4BJhC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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["\nexport class Str {\n    public static random(length = 15) {\n        let text       = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for ( let i = 0; i < length; i ++ ) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n\n    public static ensureLeft(str: string, left: string): string {\n        if ( false === str.startsWith(left) ) {\n            return left + str;\n        }\n        return str;\n    }\n\n    public static ensureRight(str: string, right: string): string {\n        if ( false === str.endsWith(right) ) {\n            return str + right;\n        }\n        return str;\n    }\n\n    public static stripLeft(str: string, left: string): string {\n        if ( str.startsWith(left) ) {\n            return str.substr(left.length);\n        }\n        return str;\n    }\n\n    public static stripRight(str: string, right: string): string {\n        if ( str.endsWith(right) ) {\n            return str.substr(0, str.length - right.length);\n        }\n        return str;\n    }\n\n    public static ucfirst(string) {\n        return string[ 0 ].toUpperCase() + string.slice(1);\n    }\n\n    public static lcfirst(string) {\n        return string[ 0 ].toLowerCase() + string.slice(1);\n    }\n\n    public static parameters(str: string, params: Record<string, string>) {\n        Object.entries(params).forEach(([ key, value ]) => str = str.replace(new RegExp(':' + key, 'g'), value));\n        return str;\n    }\n\n}\n\n/**\n *\n * @param obj\n * @param k\n * @param v\n * @example\n *\n * params = Object.entries(params).filter(([ key, value ]) => {\n *     return value.toString().length > 0;\n * }).reduce(utils.objectify, {});\n *\n */\nexport const objectify = (obj, [ k, v ]) => ({ ...obj, [ k ]: v });\n\n\nexport function paramsToQueryString(params:any):string{\n    return encodeURIComponent(btoa(JSON.stringify(params)));\n}\nexport const mergeObjects = <T extends object = object>(target: T, ...sources: T[]): T  => {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (source === undefined) {\n        return target;\n    }\n\n    if (isMergebleObject(target) && isMergebleObject(source)) {\n        Object.keys(source).forEach(function(key: string) {\n            if (isMergebleObject(source[key])) {\n                if (!target[key]) {\n                    target[key] = {};\n                }\n                mergeObjects(target[key], source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        });\n    }\n\n    return mergeObjects(target, ...sources);\n};\n\nconst isObject = (item: any): item is object => {\n    return item !== null && typeof item === 'object';\n};\n\nconst isMergebleObject = (item): boolean => {\n    return isObject(item) && !Array.isArray(item);\n};","import { Client } from './Client';\n\n\nexport abstract class Resource {\n    constructor(protected client:Client) {\n\n    }\n}","import { Resource } from './Resource';\nimport { ClientResponse, RequestConfig } from './types';\n\n\nexport class Streams extends Resource {\n    async get<T>(config: RequestConfig = {}): Promise<ClientResponse<T[]>> {\n        return this.client.request('get', '/streams', config);\n    }\n\n    async find<T>(stream: string | number, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('get', `/streams/${stream}`, config);\n    }\n\n    async post<T>(data: any, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n\n        return this.client.request('post', '/streams', config);\n    }\n\n    async patch<T>(config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('patch', '/streams', config);\n    }\n\n    async put<T>(config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('put', '/streams', config);\n    }\n\n    async delete<T>(stream: string | number, config: RequestConfig = {}): Promise<ClientResponse<T>> {\n        return this.client.request('delete', `/streams/${stream}`, config);\n    }\n}","import { MimeType, RequestHeader, RequestHeaderValue } from '../types';\n\nexport class FetchHeaders extends Headers {\n    constructor(init?: HeadersInit) {\n        super(init);\n    }\n\n    set(key: RequestHeader, value: RequestHeaderValue) {\n        super.set(key, value);\n    }\n\n    Accept(mime: MimeType) {\n        this.set('Accept', mime);\n        return this;\n    }\n\n    ContentType(mime: MimeType) {\n        this.set('Content-Type', mime);\n        return this;\n    }\n\n    IfNoneMatch(etag: string) {\n        this.set('If-None-Match', etag);\n        return this;\n    }\n\n    basic(username: string, password: string) {\n        return this.authorization('Basic', btoa(username + ':' + password));\n    }\n\n    bearer(token: string) {\n        return this.authorization('Bearer', token);\n    }\n\n    authorization(key: 'Basic' | 'Bearer', value: string) {\n        this.set('Authorization', key + ' ' + value);\n        return this;\n    }\n\n    toObject() {\n        let obj = {};\n        for ( const header of this[ 'entries' ]() ) {\n            obj[ header[ 0 ] ] = header[ 1 ];\n        }\n        return obj;\n    }\n}","import { ClientResponse, RequestConfig,ResponseType } from '../types';\nimport { FetchHeaders } from './FetchHeaders';\n\nexport class FetchRequest extends Request {\n    response: ClientResponse;\n    headers: FetchHeaders;\n    responseType:ResponseType;\n\n    constructor(input: RequestInfo | URL, init: RequestConfig = {}) {\n        super(input, init);\n        this.responseType = init.responseType || 'json';\n        delete this.headers;\n        Object.defineProperty(this, 'headers', {\n            value   : new FetchHeaders(init.headers),\n            writable: false,\n        });\n    }\n\n    isResponseType(responseType:ResponseType){\n        return this.responseType === responseType\n    }\n\n    fetch(): Promise<this> {\n        return fetch(this.url, this).then(async (response: ClientResponse) => {\n            this.response    = response;\n            response.request = this;\n            return this;\n        });\n    }\n}","import { FetchRequest } from './fetch/FetchRequest';\nimport { ClientResponse } from './types';\n\n\nexport class RequestError extends Error {\n    public get response(): ClientResponse { return this.request.response;}\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly url: string;\n\n    constructor(public readonly request: FetchRequest) {\n        super(`HTTP ${request.response.status} error:\\n ${request.response.statusText}`);\n        this.status= request.response.status\n        this.statusText= request.response.statusText\n        this.url= request.response.url\n    }\n}","import { mergeObjects, Str } from './utils';\nimport { Streams } from './Streams';\nimport { FetchRequest } from './fetch/FetchRequest';\nimport { ClientResponse, RequestConfig } from './types';\nimport { Middleware } from './middleware/Middleware';\nimport { RequestError } from './RequestError';\n\nexport interface ClientOptions {\n    baseURL: string,\n    request?: RequestInit;\n}\n\nexport interface ClientConstructorOptions extends ClientOptions {\n    middlewares?: Middleware[];\n}\n\nexport class Client {\n    public options: ClientOptions;\n    public readonly streams: Streams;\n    public readonly middlewares: Middleware[] = [];\n\n    constructor(options: ClientConstructorOptions) {\n        options                        = {\n            middlewares: [],\n            ...options,\n        };\n        this.options                   = {\n            baseURL: '',\n            request: {\n                mode   : 'cors',\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                },\n            },\n        };\n        const { middlewares, ...opts } = options;\n        this.options                   = mergeObjects(this.options, opts);\n        this.middlewares               = middlewares;\n        this.streams                   = new Streams(this);\n    }\n\n    public use(middleware: Middleware) {\n        this.middlewares.push(middleware);\n    }\n\n    public async request(method: string, uri: string, config: RequestConfig = {}): Promise<ClientResponse> {\n        let url     = Str.ensureRight(this.options.baseURL, '/') + Str.stripLeft(uri, '/');\n        config      = {\n            ...this.options.request,\n            method,\n            ...config,\n        };\n        let request = new FetchRequest(url, config);\n        for ( const middleware of this.middlewares ) {\n            if ( typeof middleware.request === 'function' ) {\n                request = await middleware.request(request, this);\n            }\n        }\n        return request.fetch().then(async (request) => {\n            if ( !request.response.ok ) {\n                throw new RequestError(request);\n            }\n            for ( const middleware of this.middlewares ) {\n                if ( typeof middleware.response === 'function' ) {\n                    request.response = await middleware.response(request.response, this);\n                }\n            }\n            return request.response;\n        })\n        // return fetch(request.url, request)\n        // .then<ClientResponse>(async (response: ClientResponse) => {\n        //     request.setResponse(response);\n        //     response.request = request;\n        //     if ( !response.ok ) {\n        //         throw new RequestError(request);\n        //     }\n        //     for ( const middleware of this.middlewares ) {\n        //         if ( typeof middleware.response === 'function' ) {\n        //             response = await middleware.response(response, this);\n        //         }\n        //     }\n        //     return response;\n        // })\n                      .catch(error => {\n                          for ( const middleware of this.middlewares ) {\n                              if ( typeof middleware.error === 'function' ) {\n                                  middleware.error(error, this);\n                              }\n                          }\n                          return error.response;\n                      });\n    }\n\n    public async requestJSON<T = any>(method: string, uri: string, config: RequestConfig = {}): Promise<T> {\n        return new Promise((resolve, reject) => {\n            this.request(method, uri, config)\n                .then(async (response) => resolve(await response.json()))\n                .catch(reason => reject(reason));\n        });\n    }\n}","import { Client } from '../Client';\nimport { FetchRequest } from '../fetch/FetchRequest';\nimport { ClientResponse } from '../types';\nimport { RequestError } from '../RequestError';\n\n\nexport abstract class Middleware {\n    request?(request: FetchRequest, client:Client): Promise<FetchRequest>\n\n    response?(response: ClientResponse,client:Client): Promise<ClientResponse>\n    error?(error: RequestError,client:Client): void\n}","import { Middleware } from './Middleware';\nimport { Client } from '../Client';\nimport { FetchRequest } from '../fetch/FetchRequest';\n\nexport interface BasicAuthorizationMiddlewareOptions {\n    type: 'basic';\n    username: string;\n    password: string;\n}\n\nexport interface BearerAuthorizationMiddlewareOptions {\n    type: 'bearer';\n    token: string;\n}\n\nexport type AuthorizationMiddlewareOptions =\n    BasicAuthorizationMiddlewareOptions\n    | BearerAuthorizationMiddlewareOptions\n\nexport class AuthorizationMiddleware extends Middleware {\n    constructor(public options: AuthorizationMiddlewareOptions) {\n        super();\n    }\n\n    public async request(request: FetchRequest, client: Client): Promise<FetchRequest> {\n        if ( this.options.type === 'basic' ) {\n            request.headers.basic(this.options.username, this.options.password);\n        } else if ( this.options.type === 'bearer' ) {\n            request.headers.bearer(this.options.token);\n        }\n        return request;\n    }\n}","\nexport class Transformer {\n    static compressor = (value:string):string => value;\n    static decompressor = (value:string):string => value;\n    static typePrefix = '__ls_';\n    static get prefixesLength(){return this.typePrefix.length + 5}\n\n    static compress(value) {\n        // return this.typePrefix + 'lz-s|' + lzs.compressToUTF16(value);\n        return this.typePrefix + 'lz-s|' + this.compressor(value);\n    }\n\n    static decompress(value) {\n        let type, length, source;\n\n        length = value.length;\n        if ( length < this.prefixesLength ) {\n            // then it wasn't compressed by us\n            return value;\n        }\n\n        type   = value.substr(0, this.prefixesLength-1);\n        source = value.substring(this.prefixesLength);\n\n        if ( type === this.typePrefix + 'lz-s' ) {\n            // value = lzs.decompressFromUTF16(source);\n            value = this.decompressor(source);\n        }\n\n        return value;\n    }\n\n    static encode(value) {\n        if ( Object.prototype.toString.call(value) === '[object Date]' ) {\n            return this.typePrefix + 'date|' + (value as Date).getTime().toString();\n        }\n        if ( Object.prototype.toString.call(value) === '[object RegExp]' ) {\n            return this.typePrefix + 'expr|' + value.source;\n        }\n        if ( typeof value === 'number' ) {\n            return this.typePrefix + 'numb|' + value;\n        }\n        if ( typeof value === 'boolean' ) {\n            return this.typePrefix + 'bool|' + (value ? '1' : '0');\n        }\n        if ( typeof value === 'string' ) {\n            return this.typePrefix + 'strn|' + value;\n        }\n        if ( value === Object(value) ) {\n            return this.typePrefix + 'objt|' + JSON.stringify(value);\n        }\n\n        // hmm, we don't know what to do with it,\n        // so just return it as is\n        return value;\n    }\n\n    static decode(value) {\n        let type, length, source;\n\n        length = value.length;\n        if ( length < this.prefixesLength ) {\n            // then it wasn't encoded by us\n            return value;\n        }\n\n        type   = value.substr(0, this.prefixesLength-1);\n        source = value.substring(this.prefixesLength);\n\n        switch ( type ) {\n            case this.typePrefix + 'date':\n                return new Date(parseInt(source));\n\n            case this.typePrefix + 'expr':\n                return new RegExp(source);\n\n            case this.typePrefix + 'numb':\n                return Number(source);\n\n            case this.typePrefix + 'bool':\n                return Boolean(source === '1');\n\n            case this.typePrefix + 'strn':\n                return '' + source;\n\n            case this.typePrefix + 'objt':\n                return JSON.parse(source);\n\n            default:\n                // hmm, we reached here, we don't know the type,\n                // then it means it wasn't encoded by us, so just\n                // return whatever value it is\n                return value;\n        }\n    }\n}\n","import { Middleware } from './Middleware';\nimport { ClientResponse } from '../types';\nimport { FetchRequest } from '../fetch/FetchRequest';\nimport { Client } from '../Client';\nimport { Transformer } from '../Transformer';\n\nconst isCacheableMethod       = (request: FetchRequest) => ~ [ 'GET', 'HEAD' ].indexOf(request.method.toUpperCase());\nconst getBase64UrlFromRequest = (request: FetchRequest) => btoa(request.url);\n\nexport interface ETagMiddlewareOptions {\n    manifestKey?: string;\n    compression?: boolean;\n}\n\nexport interface ETagCacheValue {\n    etag: string;\n    value: any;\n}\n\nclass ETagCache {\n\n    public transformer      = Transformer;\n    public storage: Storage = localStorage;\n\n    protected get options() {return this.middleware.options;}\n\n    protected get manifestKey(): string {return this.options.manifestKey;}\n\n    constructor(protected middleware: ETagMiddleware) {}\n\n    public get(key: string): ETagCacheValue | undefined {\n        if ( !this.has(key) ) {\n            return undefined;\n        }\n        let strValue = this.storage.getItem(key);\n        if ( this.options.compression ) {\n            strValue = this.transformer.decompress(strValue);\n        }\n        return this.transformer.decode(strValue);\n    }\n\n    public has(key: string): boolean {\n        return !!this.storage.getItem(key);\n    }\n\n    public set(key: string, etag: string, value: any) {\n        this.addToUuidManifest(key);\n        let strValue = this.transformer.encode({ etag, value });\n        if ( this.options.compression ) {\n            strValue = this.transformer.compress(strValue);\n        }\n        this.storage.setItem(key, strValue);\n        return this;\n    }\n\n    public unset(key: string): this {\n        this.storage.removeItem(key);\n        return this;\n    }\n\n    public clear() {\n        this.getUuidManifest().forEach(uuid => this.unset(uuid));\n        this.storage.set(this.manifestKey, []);\n        return this;\n    }\n\n    protected getUuidManifest(): string[] {\n        if ( !this.storage.has(this.manifestKey) ) {\n            this.storage.set(this.manifestKey, []);\n        }\n        return this.storage.get(this.manifestKey, []);\n    }\n\n    protected addToUuidManifest(uuid) {\n        let manifest = this.getUuidManifest();\n        manifest.push(uuid);\n        this.storage.set(this.manifestKey, manifest);\n    }\n}\n\n\nexport class ETagMiddleware extends Middleware {\n    public readonly cache: ETagCache;\n    public options: ETagMiddlewareOptions;\n    protected enabled: boolean = true;\n\n    constructor(options: ETagMiddlewareOptions = {}) {\n        super();\n        this.options = {\n            compression:false,\n            manifestKey: 'streams_api_cache',\n            ...options,\n        };\n        this.cache   = new ETagCache(this);\n    }\n\n    public enable(): this {\n        this.enabled = true;\n        return this;\n    }\n\n    public disable(): this {\n        this.enabled = false;\n        return this;\n    }\n\n    public async request(request: FetchRequest, client: Client): Promise<FetchRequest> {\n        if ( this.enabled && isCacheableMethod(request) ) {\n            const uuid             = getBase64UrlFromRequest(request);\n            const lastCachedResult = this.cache.get(uuid);\n            if ( lastCachedResult ) {\n                request.headers.IfNoneMatch(lastCachedResult.etag);\n            }\n        }\n        return request;\n    }\n\n    public async response(response: ClientResponse, client: Client): Promise<ClientResponse> {\n        if ( this.enabled && isCacheableMethod(response.request) ) {\n            if ( response.headers.has('etag') ) {\n                this.cache.set(getBase64UrlFromRequest(response.request), response.headers.get('etag'), response.data);\n            }\n        }\n        return response;\n    }\n}","import { Middleware } from './Middleware';\nimport { ClientResponse } from '../types';\nimport { Client } from '../Client';\n\n\nexport class ResultDataMiddleware extends Middleware {\n    public async response(response: ClientResponse, client: Client): Promise<ClientResponse> {\n        const request = response.request;\n        if ( request.isResponseType('arraybuffer') ) {\n            response.data = await response.arrayBuffer();\n        } else if ( request.isResponseType('blob') ) {\n            response.data = await response.blob();\n        } else if ( request.isResponseType('document') ) {\n            response.data = await response.formData();\n        } else if ( request.isResponseType('json') ) {\n            response.data = await response.json();\n        } else if ( request.isResponseType('stream') ) {\n            response.data = await response.body;\n        } else if ( request.isResponseType('text') ) {\n            response.data = await response.text();\n        }\n        return response;\n    }\n}","export * from './AuthorizationMiddleware';\nexport * from './Middleware';\nexport * from './ETagMiddleware';\nexport * from './ResultDataMiddleware';\n","import {Client} from './Client';\nimport { AuthorizationMiddleware,Middleware,ETagMiddleware,ResultDataMiddleware } from './middleware';\nimport { FetchRequest } from './fetch/FetchRequest';\nimport { FetchHeaders } from './fetch/FetchHeaders';\nexport * from './middleware'\nexport {Client,FetchHeaders,FetchRequest,Middleware,ETagMiddleware,ResultDataMiddleware};\n\n// @ts-ignore\nglobal['streams_api'] = {Client,AuthorizationMiddleware,FetchHeaders,FetchRequest,Middleware,ETagMiddleware,ResultDataMiddleware};\n\ninterface Window {\n    streams_api:{\n        Client: typeof Client\n        AuthorizationMiddleware:typeof AuthorizationMiddleware\n        FetchHeaders:typeof FetchHeaders\n        FetchRequest:typeof FetchRequest\n        Middleware:typeof Middleware\n        ETagMiddleware:typeof ETagMiddleware\n        ResultDataMiddleware:typeof ResultDataMiddleware\n    }\n}"]}